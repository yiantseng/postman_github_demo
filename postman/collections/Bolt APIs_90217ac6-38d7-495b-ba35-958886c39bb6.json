{
	"info": {
		"_postman_id": "985a1f34-7ac8-40cc-9780-1f4c25a5b0c5",
		"name": "Bolt APIs",
		"description": "## About\n\nThe Bolt API handles [order token creation](/developers/guides/custom-cart-guides/how-to-integrate/create-bolt-order-token/), [transaction actions](/merchants/guides/dashboard/view-transactions/), and [statements](/merchants/references/financials/statements/) generated for merchants using Bolt Payments.\n\nNote: You must also reference the [Merchant API](/api-merchant) when building a custom cart integration\n\n* * *\n\nYou can add additional instructions/documentation here. This will stay in sync, even if you update the API spec and collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "account",
					"item": [
						{
							"name": "addresses",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Delete Address",
											"id": "1b1a12c3-5b84-4167-bb80-c6a2f0632c41",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "DELETE",
												"header": [
													{
														"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
														"key": "X-Publishable-Key",
														"value": "Excepteur"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/account/addresses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"addresses",
														":id"
													],
													"variable": [
														{
															"id": "2cf6d002-35bb-4ea9-98c8-7545f2fc1ff0",
															"key": "id",
															"value": "Excepteur",
															"description": "(Required) The ID for an address in the shopper's Address Book."
														}
													]
												},
												"description": "Deletes an existing address in a shopper's address book.\n"
											},
											"response": [
												{
													"id": "f035e8f5-54ad-4e65-9b13-63678c028cf8",
													"name": "Address Successfully Deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
																"key": "X-Publishable-Key",
																"value": "Excepteur"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/account/addresses/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"addresses",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Excepteur",
																	"description": "(Required) The ID for an address in the shopper's Address Book."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Edit Address",
											"id": "0c9914cd-0c2d-49e4-8e5d-c7ea7256bb56",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "POST",
												"header": [
													{
														"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
														"key": "X-Publishable-Key",
														"value": "Excepteur"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"street_address1\": \"888 main street\",\n  \"locality\": \"Brooklyn\",\n  \"region\": \"NY\",\n  \"postal_code\": \"10044\",\n  \"company\": \"Bolt\",\n  \"country\": \"United States\",\n  \"country_code\": \"US\",\n  \"default\": true,\n  \"email\": \"alan.watts@bolt.com\",\n  \"first_name\": \"Alan\",\n  \"last_name\": \"Watts\",\n  \"name\": \"Alan Watts\",\n  \"phone\": \"1-867-5309\",\n  \"region_code\": \"NY\",\n  \"street_address2\": \"apt 3021\",\n  \"street_address3\": null,\n  \"street_address4\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/account/addresses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"addresses",
														":id"
													],
													"variable": [
														{
															"id": "65b40460-de5e-4198-8893-fcaa7d2493d6",
															"key": "id",
															"value": "Excepteur",
															"description": "(Required) The ID for an address in the shopper's Address Book."
														}
													]
												},
												"description": "Edit an existing address in a shopper's address book.\nThese changes replace the existing address.\n"
											},
											"response": [
												{
													"id": "1e6436ed-53a3-4fad-aa03-eb0310b6bf82",
													"name": "Address Updated Successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
																"key": "X-Publishable-Key",
																"value": "Excepteur"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"street_address1\": \"888 main street\",\n  \"locality\": \"Brooklyn\",\n  \"region\": \"NY\",\n  \"postal_code\": \"10044\",\n  \"company\": \"Bolt\",\n  \"country\": \"United States\",\n  \"country_code\": \"US\",\n  \"default\": true,\n  \"email\": \"alan.watts@bolt.com\",\n  \"first_name\": \"Alan\",\n  \"last_name\": \"Watts\",\n  \"name\": \"Alan Watts\",\n  \"phone\": \"1-867-5309\",\n  \"region_code\": \"NY\",\n  \"street_address2\": \"apt 3021\",\n  \"street_address3\": null,\n  \"street_address4\": null\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/account/addresses/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"addresses",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Excepteur",
																	"description": "(Required) The ID for an address in the shopper's Address Book."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"company\": \"Bolt\",\n  \"country\": \"United States\",\n  \"country_code\": \"US\",\n  \"email_address\": \"alan.watts@bolt.com\",\n  \"first_name\": \"Alan\",\n  \"id\": \"cupidatat\",\n  \"last_name\": \"Watts\",\n  \"locality\": \"Brooklyn\",\n  \"name\": \"Alan Watts\",\n  \"phone_number\": \"1-867-5309\",\n  \"postal_code\": \"10044\",\n  \"region\": \"NY\",\n  \"region_code\": \"NY\",\n  \"street_address1\": \"888 main street\",\n  \"street_address2\": \"apt 3021\",\n  \"street_address3\": null,\n  \"street_address4\": null,\n  \"default\": true\n}"
												}
											]
										}
									],
									"id": "da16d050-0f2d-4772-923f-b7e409cf1b5c"
								},
								{
									"name": "Add Address",
									"id": "0d0a4249-6900-4ce7-b540-590aa1c9c001",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
												"key": "X-Publishable-Key",
												"value": "Excepteur"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"street_address1\": \"888 main street\",\n  \"locality\": \"Brooklyn\",\n  \"region\": \"NY\",\n  \"postal_code\": \"10044\",\n  \"company\": \"Bolt\",\n  \"country\": \"United States\",\n  \"country_code\": \"US\",\n  \"default\": true,\n  \"email\": \"alan.watts@bolt.com\",\n  \"first_name\": \"Alan\",\n  \"last_name\": \"Watts\",\n  \"name\": \"Alan Watts\",\n  \"phone\": \"1-867-5309\",\n  \"region_code\": \"NY\",\n  \"street_address2\": \"apt 3021\",\n  \"street_address3\": null,\n  \"street_address4\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account/addresses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account",
												"addresses"
											]
										},
										"description": "Add an address to a shopper's account address book."
									},
									"response": [
										{
											"id": "735d43de-4829-4ac2-818d-b4b20e4531b7",
											"name": "Address Added Successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
														"key": "X-Publishable-Key",
														"value": "Excepteur"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"street_address1\": \"888 main street\",\n  \"locality\": \"Brooklyn\",\n  \"region\": \"NY\",\n  \"postal_code\": \"10044\",\n  \"company\": \"Bolt\",\n  \"country\": \"United States\",\n  \"country_code\": \"US\",\n  \"default\": true,\n  \"email\": \"alan.watts@bolt.com\",\n  \"first_name\": \"Alan\",\n  \"last_name\": \"Watts\",\n  \"name\": \"Alan Watts\",\n  \"phone\": \"1-867-5309\",\n  \"region_code\": \"NY\",\n  \"street_address2\": \"apt 3021\",\n  \"street_address3\": null,\n  \"street_address4\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/account/addresses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"addresses"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"company\": \"Bolt\",\n  \"country\": \"United States\",\n  \"country_code\": \"US\",\n  \"email_address\": \"alan.watts@bolt.com\",\n  \"first_name\": \"Alan\",\n  \"id\": \"cupidatat\",\n  \"last_name\": \"Watts\",\n  \"locality\": \"Brooklyn\",\n  \"name\": \"Alan Watts\",\n  \"phone_number\": \"1-867-5309\",\n  \"postal_code\": \"10044\",\n  \"region\": \"NY\",\n  \"region_code\": \"NY\",\n  \"street_address1\": \"888 main street\",\n  \"street_address2\": \"apt 3021\",\n  \"street_address3\": null,\n  \"street_address4\": null,\n  \"default\": true\n}"
										}
									]
								}
							],
							"id": "21ae55e3-6f44-4b59-847e-3a5286654e80"
						},
						{
							"name": "Get Account Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d60e954b-9b16-458d-ae36-c28bfbde4682",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1496edea-6b36-4506-9131-c64466663046",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [
									{
										"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
										"key": "X-Publishable-Key",
										"value": "Excepteur"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"account"
									]
								},
								"description": "Fetch a shopper's account details to pre-fill checkout fields. This request must come from your backend for security purposes, as it requires the use of your private key to authenticate. For PCI compliance, only limited information is returned for each credit card available in the shopper’s wallet."
							},
							"response": [
								{
									"id": "e60034d6-cd9b-4487-ad65-94f51bcd1c60",
									"name": "Account Created",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
												"key": "X-Publishable-Key",
												"value": "Excepteur"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"addresses\": [\n    {\n      \"company\": \"Bolt\",\n      \"country\": \"United States\",\n      \"country_code\": \"US\",\n      \"email_address\": \"alan.watts@bolt.com\",\n      \"first_name\": \"Alan\",\n      \"id\": \"nulla sunt irure\",\n      \"last_name\": \"Watts\",\n      \"locality\": \"Brooklyn\",\n      \"name\": \"Alan Watts\",\n      \"phone_number\": \"1-867-5309\",\n      \"postal_code\": \"10044\",\n      \"region\": \"NY\",\n      \"region_code\": \"NY\",\n      \"street_address1\": \"888 main street\",\n      \"street_address2\": \"apt 3021\",\n      \"street_address3\": null,\n      \"street_address4\": null\n    },\n    {\n      \"company\": \"Bolt\",\n      \"country\": \"United States\",\n      \"country_code\": \"US\",\n      \"email_address\": \"alan.watts@bolt.com\",\n      \"first_name\": \"Alan\",\n      \"id\": \"eiusmod\",\n      \"last_name\": \"Watts\",\n      \"locality\": \"Brooklyn\",\n      \"name\": \"Alan Watts\",\n      \"phone_number\": \"1-867-5309\",\n      \"postal_code\": \"10044\",\n      \"region\": \"NY\",\n      \"region_code\": \"NY\",\n      \"street_address1\": \"888 main street\",\n      \"street_address2\": \"apt 3021\",\n      \"street_address3\": null,\n      \"street_address4\": null\n    }\n  ],\n  \"has_bolt_account\": true,\n  \"payment_methods\": [\n    {\n      \"billing_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": \"Excepteur Ut\",\n      \"last4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": \"card\"\n    },\n    {\n      \"billing_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": \"irure\",\n      \"last4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": \"card\"\n    }\n  ],\n  \"profile\": {\n    \"email\": \"alan.watts@bolt.com\",\n    \"first_name\": \"Alan\",\n    \"last_name\": \"Watts\",\n    \"name\": \"Alan Watts\",\n    \"phone\": \"1-867-5309\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Bolt Account",
							"id": "f5105c35-d8d2-46ce-9c7b-a778dc6b9e27",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
										"key": "X-Publishable-Key",
										"value": "Excepteur"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"profile\": {\n    \"first_name\": \"Alan\",\n    \"last_name\": \"Watts\",\n    \"email\": \"alan.watts@bolt.com\",\n    \"phone\": \"1-867-5309\"\n  },\n  \"addresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"payment_methods\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"account"
									]
								},
								"description": "Create a Bolt shopping account."
							},
							"response": [
								{
									"id": "f6272844-06df-4179-b916-2abe86b98e05",
									"name": "Account Details Fetched",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
												"key": "X-Publishable-Key",
												"value": "Excepteur"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"profile\": {\n    \"first_name\": \"Alan\",\n    \"last_name\": \"Watts\",\n    \"email\": \"alan.watts@bolt.com\",\n    \"phone\": \"1-867-5309\"\n  },\n  \"addresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"payment_methods\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"addresses\": [\n    {\n      \"company\": \"Bolt\",\n      \"country\": \"United States\",\n      \"country_code\": \"US\",\n      \"email_address\": \"alan.watts@bolt.com\",\n      \"first_name\": \"Alan\",\n      \"id\": \"Excepteur reprehenderit laborum\",\n      \"last_name\": \"Watts\",\n      \"locality\": \"Brooklyn\",\n      \"name\": \"Alan Watts\",\n      \"phone_number\": \"1-867-5309\",\n      \"postal_code\": \"10044\",\n      \"region\": \"NY\",\n      \"region_code\": \"NY\",\n      \"street_address1\": \"888 main street\",\n      \"street_address2\": \"apt 3021\",\n      \"street_address3\": null,\n      \"street_address4\": null\n    },\n    {\n      \"company\": \"Bolt\",\n      \"country\": \"United States\",\n      \"country_code\": \"US\",\n      \"email_address\": \"alan.watts@bolt.com\",\n      \"first_name\": \"Alan\",\n      \"id\": \"officia laborum esse irure\",\n      \"last_name\": \"Watts\",\n      \"locality\": \"Brooklyn\",\n      \"name\": \"Alan Watts\",\n      \"phone_number\": \"1-867-5309\",\n      \"postal_code\": \"10044\",\n      \"region\": \"NY\",\n      \"region_code\": \"NY\",\n      \"street_address1\": \"888 main street\",\n      \"street_address2\": \"apt 3021\",\n      \"street_address3\": null,\n      \"street_address4\": null\n    }\n  ],\n  \"has_bolt_account\": true,\n  \"payment_methods\": [\n    {\n      \"billing_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": \"adipisicing ea Lorem magna\",\n      \"last4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": \"card\"\n    },\n    {\n      \"billing_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": \"esse\",\n      \"last4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": \"card\"\n    }\n  ],\n  \"profile\": {\n    \"email\": \"alan.watts@bolt.com\",\n    \"first_name\": \"Alan\",\n    \"last_name\": \"Watts\",\n    \"name\": \"Alan Watts\",\n    \"phone\": \"1-867-5309\"\n  }\n}"
								}
							]
						},
						{
							"name": "Detect Account",
							"id": "325a95f5-21ea-4f8f-a836-a71b0389ec95",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
										"key": "X-Publishable-Key",
										"value": "Excepteur"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/account/exists?email=Excepteur&sha256_email=Excepteur",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"account",
										"exists"
									],
									"query": [
										{
											"key": "email",
											"value": "Excepteur",
											"description": "(Required) The shopper's email address; can be passed instead of `sha256_email`."
										},
										{
											"key": "sha256_email",
											"value": "Excepteur",
											"description": "(Required) The sha256 hash of the shopper's normalized email address; can be passed instead of `email`."
										}
									]
								},
								"description": "Check whether an account exists using `email` as the unique identifier."
							},
							"response": [
								{
									"id": "3a4a2cce-7b42-4634-8a35-52e6f7ef13b6",
									"name": "Has Bolt Account",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											},
											{
												"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
												"key": "X-Publishable-Key",
												"value": "Excepteur"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/account/exists?email=Excepteur&sha256_email=Excepteur",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account",
												"exists"
											],
											"query": [
												{
													"key": "email",
													"value": "Excepteur"
												},
												{
													"key": "sha256_email",
													"value": "Excepteur"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"has_bolt_account\": true\n}"
								},
								{
									"id": "d73f8408-1c1a-4f58-909b-cf55611f144d",
									"name": "Missing Email Query Parameter",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											},
											{
												"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
												"key": "X-Publishable-Key",
												"value": "Excepteur"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/account/exists?email=Excepteur&sha256_email=Excepteur",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account",
												"exists"
											],
											"query": [
												{
													"key": "email",
													"value": "Excepteur"
												},
												{
													"key": "sha256_email",
													"value": "Excepteur"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": {\n    \"code\": 25,\n    \"message\": \"The input is missing a required parameter.\"\n  },\n  \"result\": {\n    \"success\": false\n  }\n}"
								}
							]
						},
						{
							"name": "Add Payment Method",
							"id": "19cd616d-e434-4402-881b-d8ab41df0b1d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
										"key": "X-Publishable-Key",
										"value": "Excepteur"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"a1B2c3D4e5F6G7H8i9J0k1L2m3N4o5P6Q7r8S9t0\",\n  \"last4\": \"1234\",\n  \"bin\": \"venia\",\n  \"number\": \"dolor\",\n  \"expiration\": \"2025-11\",\n  \"postal_code\": \"10044\",\n  \"token_type\": \"bolt\",\n  \"billing_address\": {\n    \"street_address1\": \"888 main street\",\n    \"locality\": \"Brooklyn\",\n    \"region\": \"NY\",\n    \"postal_code\": \"10044\",\n    \"company\": \"Bolt\",\n    \"country\": \"United States\",\n    \"country_code\": \"US\",\n    \"default\": true,\n    \"email\": \"alan.watts@bolt.com\",\n    \"first_name\": \"Alan\",\n    \"last_name\": \"Watts\",\n    \"name\": \"Alan Watts\",\n    \"phone\": \"1-867-5309\",\n    \"region_code\": \"NY\",\n    \"street_address2\": \"apt 3021\",\n    \"street_address3\": null,\n    \"street_address4\": null\n  },\n  \"billing_address_id\": null,\n  \"cryptogram\": \"ad laborum\",\n  \"eci\": \"in sed\",\n  \"network\": \"diners_club_us_ca\",\n  \"priority\": 1,\n  \"save\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/account/payment_methods",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"account",
										"payment_methods"
									]
								},
								"description": "Add a payment method to a shopper's Bolt account Wallet. For security purposes, this request must come from your backend because authentication requires the use of your private key.\n\n**Note**: Before using this API, the credit card details must be tokenized using Bolt's JavaScript library function, which is documented in [Install the Bolt Tokenizer](https://help.bolt.com/developers/references/bolt-tokenizer).\n"
							},
							"response": [
								{
									"id": "372339fd-f32c-4b59-a879-176af03131af",
									"name": "Payment Method Added",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
												"key": "X-Publishable-Key",
												"value": "Excepteur"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"a1B2c3D4e5F6G7H8i9J0k1L2m3N4o5P6Q7r8S9t0\",\n  \"last4\": \"1234\",\n  \"bin\": \"venia\",\n  \"number\": \"dolor\",\n  \"expiration\": \"2025-11\",\n  \"postal_code\": \"10044\",\n  \"token_type\": \"bolt\",\n  \"billing_address\": {\n    \"street_address1\": \"888 main street\",\n    \"locality\": \"Brooklyn\",\n    \"region\": \"NY\",\n    \"postal_code\": \"10044\",\n    \"company\": \"Bolt\",\n    \"country\": \"United States\",\n    \"country_code\": \"US\",\n    \"default\": true,\n    \"email\": \"alan.watts@bolt.com\",\n    \"first_name\": \"Alan\",\n    \"last_name\": \"Watts\",\n    \"name\": \"Alan Watts\",\n    \"phone\": \"1-867-5309\",\n    \"region_code\": \"NY\",\n    \"street_address2\": \"apt 3021\",\n    \"street_address3\": null,\n    \"street_address4\": null\n  },\n  \"billing_address_id\": null,\n  \"cryptogram\": \"ad laborum\",\n  \"eci\": \"in sed\",\n  \"network\": \"diners_club_us_ca\",\n  \"priority\": 1,\n  \"save\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account/payment_methods",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account",
												"payment_methods"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"billing_address\": {\n    \"company\": \"Bolt\",\n    \"country\": \"United States\",\n    \"country_code\": \"US\",\n    \"email_address\": \"alan.watts@bolt.com\",\n    \"first_name\": \"Alan\",\n    \"id\": \"nostrud irure pariatur occaecat\",\n    \"last_name\": \"Watts\",\n    \"locality\": \"Brooklyn\",\n    \"name\": \"Alan Watts\",\n    \"phone_number\": \"1-867-5309\",\n    \"postal_code\": \"10044\",\n    \"region\": \"NY\",\n    \"region_code\": \"NY\",\n    \"street_address1\": \"888 main street\",\n    \"street_address2\": \"apt 3021\",\n    \"street_address3\": null,\n    \"street_address4\": null\n  },\n  \"id\": \"occaecat deserunt nisi\",\n  \"last4\": \"4021\",\n  \"type\": \"card\"\n}"
								}
							]
						}
					],
					"id": "e519c3d2-72df-4a10-b2d4-b2aa6779aaa1"
				},
				{
					"name": "merchant",
					"item": [
						{
							"name": "callbacks",
							"item": [
								{
									"name": "Get Callback URLs",
									"id": "917e5190-a793-4295-85ee-e7a7d23f57c7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-Key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/callbacks?division_id=Excepteur",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"callbacks"
											],
											"query": [
												{
													"key": "division_id",
													"value": "Excepteur",
													"description": "(Required) The unique ID associated to the merchant's Bolt Account division; Merchants can have different divisions to suit multiple use cases (storefronts, pay-by-link, phone order processing). You can view and switch between these divisions from the Bolt Merchant Dashboard."
												}
											]
										},
										"description": "Retrieves callbacks URLs for a Bolt merchant division."
									},
									"response": [
										{
											"id": "28d5df1d-83f2-4318-83e5-013ed3441319",
											"name": "Merchant Callbacks Retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/callbacks?division_id=Excepteur",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"callbacks"
													],
													"query": [
														{
															"key": "division_id",
															"value": "Excepteur"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"callback_urls\": [\n    {\n      \"type\": \"oauth_redirect\",\n      \"url\": \"https://example.com/1\"\n    },\n    {\n      \"type\": \"oauth_logout\",\n      \"url\": \"https://example.com/2\"\n    },\n    {\n      \"type\": \"get_account\",\n      \"url\": \"https://example.com/3\"\n    }\n  ]\n}"
										},
										{
											"id": "658119bc-b2ee-48e5-bd27-3c1c5c7282d5",
											"name": "BAD REQUEST. Request is malformed or invalid values are detected. division_id could be invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/callbacks?division_id=Excepteur",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"callbacks"
													],
													"query": [
														{
															"key": "division_id",
															"value": "Excepteur"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "7cdffb54-eb73-4bd8-ad6c-3586f86aaa01",
											"name": "Invalid Merchant API Key",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/callbacks?division_id=Excepteur",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"callbacks"
													],
													"query": [
														{
															"key": "division_id",
															"value": "Excepteur"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										}
									]
								},
								{
									"name": "Set Callback URLs",
									"id": "7fb2b926-612a-47b0-a296-d77d25afd593",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-Key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"division_id\": \"4ab56ad7865ada4ad32\",\n  \"callback_urls\": [\n    {\n      \"type\": \"oauth_redirect\",\n      \"url\": \"https://example.com/1\"\n    },\n    {\n      \"type\": \"oauth_logout\",\n      \"url\": \"https://example.com/2\"\n    },\n    {\n      \"type\": \"get_account\",\n      \"url\": \"https://example.com/3\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/callbacks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"callbacks"
											]
										},
										"description": "Configure callbacks URLs for a Bolt merchant division. This will store or override only the callback URLs that are specified in the request. Operations are fully transactional."
									},
									"response": [
										{
											"id": "f92bbf5a-d0ef-4cfe-8c4a-8d2aa7c2c233",
											"name": "Successfully sets callback URLs. No JSON schema is expected.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"division_id\": \"4ab56ad7865ada4ad32\",\n  \"callback_urls\": [\n    {\n      \"type\": \"oauth_redirect\",\n      \"url\": \"https://example.com/1\"\n    },\n    {\n      \"type\": \"oauth_logout\",\n      \"url\": \"https://example.com/2\"\n    },\n    {\n      \"type\": \"get_account\",\n      \"url\": \"https://example.com/3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/callbacks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"callbacks"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "8dea3270-28bb-4608-8669-1159f1f607ec",
											"name": "BAD REQUEST. Request is malformed or invalid values are detected. division_id could be invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"division_id\": \"4ab56ad7865ada4ad32\",\n  \"callback_urls\": [\n    {\n      \"type\": \"oauth_redirect\",\n      \"url\": \"https://example.com/1\"\n    },\n    {\n      \"type\": \"oauth_logout\",\n      \"url\": \"https://example.com/2\"\n    },\n    {\n      \"type\": \"get_account\",\n      \"url\": \"https://example.com/3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/callbacks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"callbacks"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "0b9ec5cb-7073-46f8-bb59-9ed45eb913cc",
											"name": "Invalid Merchant API Key",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"division_id\": \"4ab56ad7865ada4ad32\",\n  \"callback_urls\": [\n    {\n      \"type\": \"oauth_redirect\",\n      \"url\": \"https://example.com/1\"\n    },\n    {\n      \"type\": \"oauth_logout\",\n      \"url\": \"https://example.com/2\"\n    },\n    {\n      \"type\": \"get_account\",\n      \"url\": \"https://example.com/3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/callbacks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"callbacks"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										}
									]
								}
							],
							"id": "811fde3f-76c0-43e4-8d61-107d7ed7506e"
						},
						{
							"name": "transactions",
							"item": [
								{
									"name": "Authorize a Card",
									"id": "1a7ba69e-b695-4a63-a920-e6c71d916129",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-Key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											},
											{
												"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
												"key": "X-Publishable-Key",
												"value": "Excepteur"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cart\": {},\n  \"credit_card\": {\n    \"token\": \"a1B2c3D4e5F6G7H8i9J0k1L2m3N4o5P6Q7r8S9t0\",\n    \"last4\": \"1234\",\n    \"bin\": \"offic\",\n    \"number\": \"cillum Lorem\",\n    \"expiration\": \"2025-11\",\n    \"postal_code\": \"10044\",\n    \"token_type\": \"bolt\",\n    \"billing_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"billing_address_id\": null,\n    \"cryptogram\": \"adipisicing irure et velit elit\",\n    \"eci\": \"non labore aute\",\n    \"network\": \"unknown\",\n    \"priority\": 2,\n    \"save\": true\n  },\n  \"division_id\": \"4ab56ad7865ada4ad32\",\n  \"source\": \"virtual_terminal\",\n  \"user_identifier\": {\n    \"phone\": \"1-867-5309\",\n    \"artifact\": \"labore Lorem mollit\",\n    \"email\": \"alan.watts@bolt.com\",\n    \"email_id\": \"Ut sit commodo\",\n    \"phone_id\": \"ut ullamco deserunt aute incididunt\"\n  },\n  \"user_identity\": {\n    \"first_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"create_bolt_account\": false,\n  \"auto_capture\": false,\n  \"consumer_id\": \"EDbh7RpKrqABC\",\n  \"order_token\": \"a2b3dDc4cA5e6fg78Bg9hj0kl\",\n  \"previous_transaction_id\": null,\n  \"processing_initiator\": \"recurring\",\n  \"shipping_address\": {\n    \"country_code\": \"US\",\n    \"first_name\": \"Alan\",\n    \"last_name\": \"Watts\",\n    \"street_address1\": \"888 main street\",\n    \"locality\": \"Brooklyn\",\n    \"region\": \"NY\",\n    \"postal_code\": \"10044\",\n    \"country\": \"United States\",\n    \"company\": \"Bolt\",\n    \"default\": true,\n    \"email\": \"alan.watts@bolt.com\",\n    \"name\": \"Alan Watts\",\n    \"phone\": \"1-867-5309\",\n    \"region_code\": \"NY\",\n    \"street_address2\": \"apt 3021\",\n    \"street_address3\": null,\n    \"street_address4\": null\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/transactions/authorize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"transactions",
												"authorize"
											]
										},
										"description": "This endpoint authorizes payments and has two uses:\n* • Authorize a payment using an unsaved payment method.\n* • Authorize a payment using a saved payment method.\n"
									},
									"response": [
										{
											"id": "98688fd8-f4d4-4836-a9c5-7634ca95e1bd",
											"name": "Authorization Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													},
													{
														"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
														"key": "X-Publishable-Key",
														"value": "Excepteur"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cart\": {},\n  \"credit_card\": {\n    \"token\": \"a1B2c3D4e5F6G7H8i9J0k1L2m3N4o5P6Q7r8S9t0\",\n    \"last4\": \"1234\",\n    \"bin\": \"offic\",\n    \"number\": \"cillum Lorem\",\n    \"expiration\": \"2025-11\",\n    \"postal_code\": \"10044\",\n    \"token_type\": \"bolt\",\n    \"billing_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"billing_address_id\": null,\n    \"cryptogram\": \"adipisicing irure et velit elit\",\n    \"eci\": \"non labore aute\",\n    \"network\": \"unknown\",\n    \"priority\": 2,\n    \"save\": true\n  },\n  \"division_id\": \"4ab56ad7865ada4ad32\",\n  \"source\": \"virtual_terminal\",\n  \"user_identifier\": {\n    \"phone\": \"1-867-5309\",\n    \"artifact\": \"labore Lorem mollit\",\n    \"email\": \"alan.watts@bolt.com\",\n    \"email_id\": \"Ut sit commodo\",\n    \"phone_id\": \"ut ullamco deserunt aute incididunt\"\n  },\n  \"user_identity\": {\n    \"first_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"create_bolt_account\": false,\n  \"auto_capture\": false,\n  \"consumer_id\": \"EDbh7RpKrqABC\",\n  \"order_token\": \"a2b3dDc4cA5e6fg78Bg9hj0kl\",\n  \"previous_transaction_id\": null,\n  \"processing_initiator\": \"recurring\",\n  \"shipping_address\": {\n    \"country_code\": \"US\",\n    \"first_name\": \"Alan\",\n    \"last_name\": \"Watts\",\n    \"street_address1\": \"888 main street\",\n    \"locality\": \"Brooklyn\",\n    \"region\": \"NY\",\n    \"postal_code\": \"10044\",\n    \"country\": \"United States\",\n    \"company\": \"Bolt\",\n    \"default\": true,\n    \"email\": \"alan.watts@bolt.com\",\n    \"name\": \"Alan Watts\",\n    \"phone\": \"1-867-5309\",\n    \"region_code\": \"NY\",\n    \"street_address2\": \"apt 3021\",\n    \"street_address3\": null,\n    \"street_address4\": null\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/authorize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"authorize"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"external_outputs\": {\n    \"commerce_cloud_order_uuid\": \"Lorem occaecat quis laborum\",\n    \"shopify_response\": {\n      \"x_account_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"x_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"x_currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"x_gateway_reference\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"x_reference\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"x_result\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"x_signature\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"x_test\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"x_timestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"x_message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"is_verified_device_saved\": false,\n  \"order_number\": \"ullamco in\",\n  \"redirect_url\": \"laborum irure\",\n  \"transaction\": {\n    \"amount\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"authorization\": {\n      \"auth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"avs_response\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cvv_response\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"processor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"reason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"capture\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"splits\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"captures\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"credit\": {\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"date\": 1615407159447,\n    \"from_consumer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"from_credit_card\": {\n      \"billing_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"display_network\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expiration\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"network\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"token_type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"id\": \"T1c3p4yBuVYJ9\",\n    \"indemnification_decision\": \"indemnified\",\n    \"indemnification_reason\": \"merchant_force_approved\",\n    \"last4\": \"4021\",\n    \"last_viewed_utc\": -99721730.71671708,\n    \"merchant\": {\n      \"created_at\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"processor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"merchant_division\": {\n      \"account_page_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"debug_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"display_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"get_account_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hook_type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hook_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ios_app_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"is_provisioned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"is_universal_merchant_api\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"is_webhooks_v2\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo_dashboard\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"merchant_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"merchant_sms_autoreply\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"merchant_sms_number\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mobile_app_domain_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauth_logout_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauth_redirect_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"platform\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"privacy_policy_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"product_info_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"public_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sfcc_site_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipping_and_tax_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipping_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"support_page_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tax_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"terms_of_service_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"universal_merchant_api_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"update_cart_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"validate_additional_account_data_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"webhook_urls\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"merchant_order_number\": \"eiusmod\",\n    \"order_decision\": {\n      \"decision_factors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"score\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"processor\": \"adyen_gateway\",\n    \"properties\": {\n      \"incb7\": \"nostrud ex\",\n      \"laborisec\": \"in sed\"\n    },\n    \"reference\": \"dolore sed e\",\n    \"requested_refund_amount\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"review_ticket\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"request_deadline\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"risk_insights\": {\n      \"available\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"decision_factors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fraud_probability\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"payment_instrument_factors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"splits\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"status\": \"cancelled\",\n    \"to_consumer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"to_credit_card\": {\n      \"billing_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"display_network\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expiration\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"network\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"token_type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"total_refund_amount\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"type\": \"cc_payment\",\n    \"view_status\": \"viewing\"\n  }\n}"
										}
									]
								},
								{
									"name": "Capture a Transaction",
									"id": "d8682fe4-d151-46c7-9ded-821c842e3c75",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-Key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transaction_reference\": \"ex aliqua ea\",\n  \"amount\": 754,\n  \"currency\": \"USD\",\n  \"skip_hook_notification\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/transactions/capture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"transactions",
												"capture"
											]
										},
										"description": "This captures funds for the designated transaction. A capture can be done for any partial amount or for the total authorized amount.\n\nAlthough the response returns the standard `transaction_view` object, only `captures` and either `id` or `reference` are needed.\n"
									},
									"response": [
										{
											"id": "88b22452-d56e-4926-8218-cf30bd002019",
											"name": "Capture Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/capture",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"capture"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"amount\": {\n    \"amount\": 55424369.59964281,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"authorization\": {\n    \"auth\": \"ullamco ipsum\",\n    \"avs_response\": \"adyen_Y\",\n    \"cvv_response\": \"P\",\n    \"metadata\": {\n      \"proident_1b0\": \"qui eiusmod dolore\"\n    },\n    \"processor\": \"braintree\",\n    \"reason\": 5,\n    \"status\": 1\n  },\n  \"capture\": {\n    \"amount\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"id\": \"BcDE4fafd2a4\",\n    \"metadata\": {\n      \"anim_dd\": \"pariatur velit\",\n      \"inaf\": \"veniam non ut in Lorem\"\n    },\n    \"splits\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"status\": \"succeeded\"\n  },\n  \"captures\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"quis25\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"splits\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"nullada\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"splits\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"credit\": {\n    \"status\": \"succeeded\"\n  },\n  \"date\": 1615407159447,\n  \"from_consumer\": {\n    \"first_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authentication\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email_verified\": true,\n    \"emails\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_had_associated_address\": false,\n    \"phones\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"platform_account_status\": \"unlinked\"\n  },\n  \"from_credit_card\": {\n    \"billing_address\": {\n      \"company\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"first_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"locality\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone_number\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"postal_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address1\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address2\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"bin\": \"402201\",\n    \"display_network\": \"Visa\",\n    \"expiration\": 1654041600000,\n    \"id\": \"AB3rJKam5DhYE\",\n    \"last4\": \"4021\",\n    \"network\": \"visa\",\n    \"priority\": \"primary\",\n    \"status\": \"active\",\n    \"token_type\": \"bolt\"\n  },\n  \"id\": \"T1c3p4yBuVYJ9\",\n  \"indemnification_decision\": \"indemnified\",\n  \"indemnification_reason\": \"merchant_force_approved\",\n  \"last4\": \"4021\",\n  \"last_viewed_utc\": 66527681.34902981,\n  \"merchant\": {\n    \"created_at\": \"ea ipsum\",\n    \"description\": \"Excepteur ea\",\n    \"processor\": \"authorize_net\"\n  },\n  \"merchant_division\": {\n    \"account_page_url\": \"dolor aliquip\",\n    \"debug_url\": \"id in aute qui consequat\",\n    \"description\": \"sunt adipisicing\",\n    \"display_name\": \"ipsum mollit\",\n    \"get_account_url\": \"fugiat nostrud in magna tempor\",\n    \"hook_type\": \"1\",\n    \"hook_url\": \"laboris eiusmod quis commodo\",\n    \"id\": \"in i\",\n    \"ios_app_name\": \"aliquip Lorem\",\n    \"is_provisioned\": false,\n    \"is_universal_merchant_api\": true,\n    \"is_webhooks_v2\": true,\n    \"logo\": {\n      \"domain\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"logo_dashboard\": {\n      \"domain\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"merchant_id\": \"ea consequat Duis anim\",\n    \"merchant_sms_autoreply\": \"quis dolore\",\n    \"merchant_sms_number\": \"anim enim\",\n    \"mobile_app_domain_url\": \"est nisi sint laborum\",\n    \"oauth_logout_url\": \"nulla ullamco\",\n    \"oauth_redirect_url\": \"laboris qui non\",\n    \"platform\": \"et commodo consequat\",\n    \"privacy_policy_url\": \"anim nisi aliquip pariatur\",\n    \"product_info_url\": \"se\",\n    \"public_id\": \"veniam laboris d\",\n    \"sfcc_site_id\": \"Duis ea aliquip\",\n    \"shipping_and_tax_url\": \"sit in\",\n    \"shipping_url\": \"mollit fugiat ad aliquip\",\n    \"support_page_url\": \"ipsum in qui anim\",\n    \"tax_url\": \"anim sed dolor\",\n    \"terms_of_service_url\": \"commodo exercitation\",\n    \"universal_merchant_api_url\": \"enim deserunt officia et\",\n    \"update_cart_url\": \"nostrud \",\n    \"validate_additional_account_data_url\": \"dolo\",\n    \"webhook_urls\": [\n      \"pariatur sed Lorem\",\n      \"quis sunt et cupidatat laborum\"\n    ]\n  },\n  \"merchant_order_number\": \"id sunt irure Duis\",\n  \"order_decision\": {\n    \"decision_factors\": [\n      \"et officia aliquip\",\n      \"sed ea of\"\n    ],\n    \"score\": 48348351.47938034\n  },\n  \"processor\": \"adyen_gateway\",\n  \"properties\": {\n    \"ametf\": \"nostrud occaecat\"\n  },\n  \"reference\": \"amet ex Exce\",\n  \"requested_refund_amount\": {\n    \"amount\": -33433407.791635618,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"review_ticket\": {\n    \"id\": \"eiusmod nulla\",\n    \"request_deadline\": -76721358.76094365,\n    \"status\": \"laborum\"\n  },\n  \"risk_insights\": {\n    \"available\": false,\n    \"decision_factors\": [\n      \"eiusmod in ex sit\",\n      \"fugiat\"\n    ],\n    \"fraud_probability\": -642984.7678132802,\n    \"payment_instrument_factors\": {\n      \"id_6e\": \"in est\",\n      \"nostrud_f\": \"veniam adipisicing\"\n    }\n  },\n  \"splits\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": \"reserve\"\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": \"processing_fee\"\n    }\n  ],\n  \"status\": \"cancelled\",\n  \"to_consumer\": {\n    \"first_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authentication\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email_verified\": false,\n    \"emails\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_had_associated_address\": true,\n    \"phones\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"platform_account_status\": \"unlinked\"\n  },\n  \"to_credit_card\": {\n    \"billing_address\": {\n      \"company\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"first_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"locality\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone_number\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"postal_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address1\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address2\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"bin\": \"402201\",\n    \"display_network\": \"Visa\",\n    \"expiration\": 1654041600000,\n    \"id\": \"AB3rJKam5DhYE\",\n    \"last4\": \"4021\",\n    \"network\": \"visa\",\n    \"priority\": \"primary\",\n    \"status\": \"active\",\n    \"token_type\": \"bolt\"\n  },\n  \"total_refund_amount\": {\n    \"amount\": -57572974.970457345,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"type\": \"cc_payment\",\n  \"view_status\": \"not_viewed\"\n}"
										},
										{
											"id": "7eed7106-5677-4ec4-9f84-ba0e6d6c1820",
											"name": "Generic Error Schema",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/capture",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"capture"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "1643cce5-9914-40c1-b737-7abfacc58fb3",
											"name": "Generic Error Schema",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/capture",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"capture"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "6aecb649-0ff6-487e-b142-1a06bcd80982",
											"name": "Unprocessable Entity",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/capture",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"capture"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": 1000001,\n      \"field\": \"transaction_id\",\n      \"message\": \"`TA8hLkJh4db4JJ` must be a valid public id of type transaction\"\n    },\n    {\n      \"code\": 1000001,\n      \"field\": \"transaction_id\",\n      \"message\": \"`TA8hLkJh4db4JJ` must be a valid public id of type transaction\"\n    }\n  ],\n  \"result\": {}\n}"
										}
									]
								},
								{
									"name": "Refund a Transaction",
									"id": "288ab1c1-6df1-4448-b431-7799918f7ef6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-Key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": 754,\n  \"currency\": \"USD\",\n  \"skip_hook_notification\": false,\n  \"transaction_reference\": \"cillum commo\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/transactions/credit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"transactions",
												"credit"
											]
										},
										"description": "This refunds a captured transaction. Refunds can be done for any partial amount or for the total authorized amount. Refunds are processed synchronously and return information about the refunded transaction in the standard `transaction_view` object."
									},
									"response": [
										{
											"id": "a5700656-0989-4498-8647-81418fbfae77",
											"name": "Refund Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"amount\": 754,\n  \"currency\": \"USD\",\n  \"skip_hook_notification\": false,\n  \"transaction_reference\": \"cillum commo\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/credit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"credit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"amount\": {\n    \"amount\": -56257697.415947974,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"authorization\": {\n    \"auth\": \"dolore est Excepteur\",\n    \"avs_response\": \"10\",\n    \"cvv_response\": \"braintree_S\",\n    \"metadata\": {\n      \"quis_38\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cillum_4b\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"essec9\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"processor\": \"vantiv\",\n    \"reason\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"capture\": {\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"Utf\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"splits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"captures\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"splits\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"splits\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"credit\": {\n    \"status\": \"succeeded\"\n  },\n  \"date\": 1615407159447,\n  \"from_consumer\": {\n    \"authentication\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email_verified\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emails\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"has_had_associated_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phones\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"platform_account_status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"from_credit_card\": {\n    \"billing_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"bin\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_network\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"network\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"priority\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"token_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"id\": \"T1c3p4yBuVYJ9\",\n  \"indemnification_decision\": \"indemnified\",\n  \"indemnification_reason\": \"merchant_force_approved\",\n  \"last4\": \"4021\",\n  \"last_viewed_utc\": -96836707.55273886,\n  \"merchant\": {\n    \"created_at\": \"Excepteur Ut\",\n    \"description\": \"veniam qui in cupidatat\",\n    \"processor\": \"adyen_payfac\"\n  },\n  \"merchant_division\": {\n    \"account_page_url\": \"consequat par\",\n    \"debug_url\": \"ex\",\n    \"description\": \"elit\",\n    \"display_name\": \"ea nostrud dolore\",\n    \"get_account_url\": \"sint consectetur\",\n    \"hook_type\": \"2\",\n    \"hook_url\": \"dolore amet labore\",\n    \"id\": \"dolore minim\",\n    \"ios_app_name\": \"exercitation ut\",\n    \"is_provisioned\": true,\n    \"is_universal_merchant_api\": false,\n    \"is_webhooks_v2\": true,\n    \"logo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"logo_dashboard\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"merchant_id\": \"aliqua ut culpa Excepteur\",\n    \"merchant_sms_autoreply\": \"labore qui mollit\",\n    \"merchant_sms_number\": \"enim nostr\",\n    \"mobile_app_domain_url\": \"eiusmod reprehenderit mollit\",\n    \"oauth_logout_url\": \"fugiat cupidatat non eu amet\",\n    \"oauth_redirect_url\": \"officia tempor ut nulla\",\n    \"platform\": \"sit reprehenderit exercitation aliquip \",\n    \"privacy_policy_url\": \"consequat\",\n    \"product_info_url\": \"nostrud laborum culpa\",\n    \"public_id\": \"pariatur voluptate\",\n    \"sfcc_site_id\": \"aute dolore\",\n    \"shipping_and_tax_url\": \"Excepteur\",\n    \"shipping_url\": \"ut mollit dolor\",\n    \"support_page_url\": \"eu ut laborum\",\n    \"tax_url\": \"dolor labore\",\n    \"terms_of_service_url\": \"ad in\",\n    \"universal_merchant_api_url\": \"aliquip ullamco labore laboris ipsum\",\n    \"update_cart_url\": \"ex nostrud tempor\",\n    \"validate_additional_account_data_url\": \"non et\",\n    \"webhook_urls\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"merchant_order_number\": \"quis Lorem\",\n  \"order_decision\": {\n    \"decision_factors\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"score\": 85123460.25313193\n  },\n  \"processor\": \"adyen_gateway\",\n  \"properties\": {\n    \"Excepteur_2\": \"exercitation\"\n  },\n  \"reference\": \"elit volupta\",\n  \"requested_refund_amount\": {\n    \"amount\": 91482675.21963039,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"review_ticket\": {\n    \"id\": \"consectetur sit\",\n    \"request_deadline\": 87226556.09760338,\n    \"status\": \"dolore Lorem\"\n  },\n  \"risk_insights\": {\n    \"available\": false,\n    \"decision_factors\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"fraud_probability\": -24837784.897563607,\n    \"payment_instrument_factors\": {\n      \"officia4d\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"esse_346\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aliquaa4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"in_f41\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"splits\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"status\": \"cancelled\",\n  \"to_consumer\": {\n    \"authentication\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email_verified\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emails\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"has_had_associated_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phones\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"platform_account_status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"to_credit_card\": {\n    \"billing_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"bin\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_network\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"network\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"priority\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"token_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"total_refund_amount\": {\n    \"amount\": 70497090.6413433,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"type\": \"cc_payment\",\n  \"view_status\": \"viewing\"\n}"
										},
										{
											"id": "8886a4a7-5e3c-4da4-ab05-592ff5129623",
											"name": "Generic Error Schema",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"amount\": 754,\n  \"currency\": \"USD\",\n  \"skip_hook_notification\": false,\n  \"transaction_reference\": \"cillum commo\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/credit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"credit"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										}
									]
								},
								{
									"name": "Review Transaction",
									"id": "a5342ecd-24dc-4b83-869a-820dda6bc4a7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-Key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"decision\": \"approve\",\n  \"transaction_reference\": \"est tempor a\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/transactions/review",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"transactions",
												"review"
											]
										},
										"description": "This endpoint is used to manually approve or reject orders for a specified transaction."
									},
									"response": [
										{
											"id": "20ec8a76-69c4-4688-9d3b-18736b1540c3",
											"name": "Transaction Details Received",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"decision\": \"approve\",\n  \"transaction_reference\": \"est tempor a\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/review",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"review"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"amount\": {\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency_symbol\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"authorization\": {\n    \"auth\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"avs_response\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cvv_response\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reason\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"capture\": {\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"splits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"captures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"credit\": {\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"date\": 1615407159447,\n  \"from_consumer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"from_credit_card\": {\n    \"billing_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"bin\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_network\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"network\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"priority\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"token_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"id\": \"T1c3p4yBuVYJ9\",\n  \"indemnification_decision\": \"indemnified\",\n  \"indemnification_reason\": \"merchant_force_approved\",\n  \"last4\": \"4021\",\n  \"last_viewed_utc\": -42924273.405434385,\n  \"merchant\": {\n    \"created_at\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"merchant_division\": {\n    \"account_page_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"debug_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"get_account_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hook_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hook_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ios_app_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"is_provisioned\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"is_universal_merchant_api\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"is_webhooks_v2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"logo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"logo_dashboard\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"merchant_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"merchant_sms_autoreply\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"merchant_sms_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mobile_app_domain_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oauth_logout_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oauth_redirect_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"platform\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"privacy_policy_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"product_info_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"public_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sfcc_site_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_and_tax_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"support_page_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tax_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"terms_of_service_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"universal_merchant_api_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"update_cart_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"validate_additional_account_data_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webhook_urls\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"merchant_order_number\": \"aliquip magna consequat\",\n  \"order_decision\": {\n    \"decision_factors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"score\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"processor\": \"adyen_gateway\",\n  \"properties\": {\n    \"consectetur_b9\": \"officia cillum eiusmod\"\n  },\n  \"reference\": \"ea enim culp\",\n  \"requested_refund_amount\": {\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency_symbol\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"review_ticket\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"request_deadline\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"risk_insights\": {\n    \"available\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"decision_factors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fraud_probability\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payment_instrument_factors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"splits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"status\": \"cancelled\",\n  \"to_consumer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"to_credit_card\": {\n    \"billing_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"bin\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_network\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"network\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"priority\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"token_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"total_refund_amount\": {\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency_symbol\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"type\": \"cc_payment\",\n  \"view_status\": \"viewed\",\n  \"address_change_request_metadata\": {\n    \"can_change_shipping_address\": true,\n    \"id\": \"sed anim quis irure\",\n    \"status\": \"magna irure esse\",\n    \"ticket_id\": \"magna enim\",\n    \"ticket_status\": \"enim ad tempor ex\"\n  },\n  \"adjust_transactions\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/transaction_view detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/transaction_view detected>\"\n    }\n  ],\n  \"auth_verification_status\": \"new\",\n  \"authorization_id\": \"ullamco occaecat nulla Ut Lorem\",\n  \"chargeback_details\": {\n    \"amt_won\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chargeback_amt\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chargeback_fee\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chargeback_id\": \"irure ut inc\",\n    \"event_views\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"net_amt\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reason\": \"e\",\n    \"reason_code\": \"amet minim nulla\",\n    \"representment_reply_by_date\": 31611194.875435665,\n    \"representment_result\": \"none\"\n  },\n  \"custom_fields\": [\n    {\n      \"field\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"response\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"field\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"response\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"customer_list_status\": {\n    \"auto_approved\": false,\n    \"block_listed\": false\n  },\n  \"manual_disputes\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"delivery_evidence\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"delivery_link\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute_evidence\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute_link\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"other_evidence\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"other_link\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"reason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"delivery_evidence\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"delivery_link\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute_evidence\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute_link\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"other_evidence\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"other_link\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"reason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"order\": {\n    \"cart\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dynamic_content\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"external_data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"token\": \"aliqua incididunt tempor\",\n    \"user_note\": \"cillum officia dolor non\"\n  },\n  \"refund_transaction_ids\": [\n    \"et ullamco incidi\",\n    \"consequat ut\"\n  ],\n  \"refund_transactions\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/transaction_view detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/transaction_view detected>\"\n    }\n  ],\n  \"refunded_amount\": {\n    \"amount\": 93055309.79556185,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"source_transaction\": {\n    \"value\": \"<Circular reference to #/components/schemas/transaction_view detected>\"\n  },\n  \"timeline\": [\n    {\n      \"address_change\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"consumer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"date\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"note\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"review\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visibility\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"address_change\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"consumer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"date\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"note\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"review\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visibility\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transaction_rejection_details\": {\n    \"auth_rejection_details\": {\n      \"reason_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"reason_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"void_cause\": \"irreversible_reject\"\n}"
										},
										{
											"id": "6c1fdc35-f95b-4914-9071-b9138dea8ff0",
											"name": "Generic Error Schema",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"decision\": \"approve\",\n  \"transaction_reference\": \"est tempor a\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/review",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"review"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "5f3a3c00-b223-42d7-b1bd-207f92cf8432",
											"name": "Generic Error Schema",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"decision\": \"approve\",\n  \"transaction_reference\": \"est tempor a\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/review",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"review"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "9bd77c84-5b55-4a4d-90da-024a9de7828c",
											"name": "Generic Error Schema",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"decision\": \"approve\",\n  \"transaction_reference\": \"est tempor a\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/review",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"review"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										}
									]
								},
								{
									"name": "Void a Transaction",
									"id": "43a3dc82-c984-4393-9165-c35a6751b97a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-Key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credit_card_transaction_id\": \"T1c3p4yBuVYJ9\",\n  \"skip_hook_notification\": false,\n  \"transaction_reference\": \"dolore Utaut\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/transactions/void",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"transactions",
												"void"
											]
										},
										"description": "This voids the authorization for a given transaction. Voids must be completed before the authorization is captured.\n\nAlthough the response returns the standard `transaction_view` object, only `status` and either `id` or `reference` are needed.\n"
									},
									"response": [
										{
											"id": "d970a615-d1b2-49fb-a430-dce946b449d6",
											"name": "Void Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"credit_card_transaction_id\": \"T1c3p4yBuVYJ9\",\n  \"skip_hook_notification\": false,\n  \"transaction_reference\": \"dolore Utaut\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/void",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"void"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"amount\": {\n    \"amount\": 14108027.024295077,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"authorization\": {\n    \"auth\": \"Excepteur dolore\",\n    \"avs_response\": \"40\",\n    \"cvv_response\": \"P\",\n    \"metadata\": {\n      \"sunt2\": \"dolore sint dolor in\",\n      \"Lorem_2\": \"ullamco in\",\n      \"aliqua7e0\": \"ut in exercitation Ut in\"\n    },\n    \"processor\": \"rocketgate\",\n    \"reason\": 2,\n    \"status\": 1\n  },\n  \"capture\": {\n    \"amount\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"id\": \"BcDE4fafd2a4\",\n    \"metadata\": {\n      \"tempor_dc\": \"do officia\"\n    },\n    \"splits\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"status\": \"succeeded\"\n  },\n  \"captures\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"sinta66\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"anim9f4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"splits\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"eu9e5\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"splits\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"credit\": {\n    \"status\": \"succeeded\"\n  },\n  \"date\": 1615407159447,\n  \"from_consumer\": {\n    \"first_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authentication\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email_verified\": false,\n    \"emails\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_had_associated_address\": true,\n    \"phones\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"platform_account_status\": \"linked\"\n  },\n  \"from_credit_card\": {\n    \"billing_address\": {\n      \"company\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"first_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"locality\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone_number\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"postal_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address1\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address2\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"bin\": \"402201\",\n    \"display_network\": \"Visa\",\n    \"expiration\": 1654041600000,\n    \"id\": \"AB3rJKam5DhYE\",\n    \"last4\": \"4021\",\n    \"network\": \"visa\",\n    \"priority\": \"primary\",\n    \"status\": \"active\",\n    \"token_type\": \"bolt\"\n  },\n  \"id\": \"T1c3p4yBuVYJ9\",\n  \"indemnification_decision\": \"indemnified\",\n  \"indemnification_reason\": \"merchant_force_approved\",\n  \"last4\": \"4021\",\n  \"last_viewed_utc\": -77680815.40856384,\n  \"merchant\": {\n    \"created_at\": \"nisi Lorem esse velit\",\n    \"description\": \"esse ullamco\",\n    \"processor\": \"stripe\"\n  },\n  \"merchant_division\": {\n    \"account_page_url\": \"est Lorem cupidatat\",\n    \"debug_url\": \"ipsum aliquip\",\n    \"description\": \"voluptate magna\",\n    \"display_name\": \"qui sunt et est deserunt\",\n    \"get_account_url\": \"Duis consectetur\",\n    \"hook_type\": \"2\",\n    \"hook_url\": \"commodo veniam sint est ea\",\n    \"id\": \"occaecat qui in\",\n    \"ios_app_name\": \"nisi Ut et\",\n    \"is_provisioned\": false,\n    \"is_universal_merchant_api\": true,\n    \"is_webhooks_v2\": true,\n    \"logo\": {\n      \"domain\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"logo_dashboard\": {\n      \"domain\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"merchant_id\": \"officia nostrud\",\n    \"merchant_sms_autoreply\": \"Excepteur aliqua eu labor\",\n    \"merchant_sms_number\": \"adipisicing labore d\",\n    \"mobile_app_domain_url\": \"ut ullamco tempor nulla\",\n    \"oauth_logout_url\": \"in laboris consectetur\",\n    \"oauth_redirect_url\": \"elit labore dolor dolore\",\n    \"platform\": \"qui\",\n    \"privacy_policy_url\": \"eu sint qui\",\n    \"product_info_url\": \"Lorem exercitation Duis\",\n    \"public_id\": \"fugiat Excepteur eu tempor nisi\",\n    \"sfcc_site_id\": \"dolore mollit est\",\n    \"shipping_and_tax_url\": \"Duis dolore\",\n    \"shipping_url\": \"commodo tempor Lorem\",\n    \"support_page_url\": \"labore\",\n    \"tax_url\": \"occaecat proident\",\n    \"terms_of_service_url\": \"sint\",\n    \"universal_merchant_api_url\": \"dolor reprehenderit velit aliqua\",\n    \"update_cart_url\": \"anim ea\",\n    \"validate_additional_account_data_url\": \"Lorem tempor cillum\",\n    \"webhook_urls\": [\n      \"aliquip in ad dolor ex\",\n      \"in aute amet deserunt non\"\n    ]\n  },\n  \"merchant_order_number\": \"est\",\n  \"order_decision\": {\n    \"decision_factors\": [\n      \"commodo amet\",\n      \"do nisi dolor\"\n    ],\n    \"score\": -42665028.1972762\n  },\n  \"processor\": \"adyen_gateway\",\n  \"properties\": {\n    \"enimd\": \"nostrud\",\n    \"elitd\": \"anim Excepteur non\"\n  },\n  \"reference\": \"culpa proide\",\n  \"requested_refund_amount\": {\n    \"amount\": -40938657.71024716,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"review_ticket\": {\n    \"id\": \"et nisi\",\n    \"request_deadline\": -18842973.37996559,\n    \"status\": \"ea Excepteur anim incididunt Duis\"\n  },\n  \"risk_insights\": {\n    \"available\": true,\n    \"decision_factors\": [\n      \"ea laboris\",\n      \"consec\"\n    ],\n    \"fraud_probability\": -16457497.303238928,\n    \"payment_instrument_factors\": {\n      \"fugiatd\": \"laboris esse in dolore\",\n      \"doloreb\": \"et \"\n    }\n  },\n  \"splits\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": \"processing_fee\"\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": \"adjustment\"\n    }\n  ],\n  \"status\": \"cancelled\",\n  \"to_consumer\": {\n    \"first_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authentication\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email_verified\": false,\n    \"emails\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_had_associated_address\": false,\n    \"phones\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"platform_account_status\": \"none\"\n  },\n  \"to_credit_card\": {\n    \"billing_address\": {\n      \"company\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"first_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"locality\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone_number\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"postal_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address1\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address2\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"bin\": \"402201\",\n    \"display_network\": \"Visa\",\n    \"expiration\": 1654041600000,\n    \"id\": \"AB3rJKam5DhYE\",\n    \"last4\": \"4021\",\n    \"network\": \"visa\",\n    \"priority\": \"primary\",\n    \"status\": \"active\",\n    \"token_type\": \"bolt\"\n  },\n  \"total_refund_amount\": {\n    \"amount\": 73273512.73810896,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"type\": \"cc_payment\",\n  \"view_status\": \"not_viewed\"\n}"
										},
										{
											"id": "916ae598-7328-44b9-84bc-b26aec1f699b",
											"name": "Generic Error Schema",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"credit_card_transaction_id\": \"T1c3p4yBuVYJ9\",\n  \"skip_hook_notification\": false,\n  \"transaction_reference\": \"dolore Utaut\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/void",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"void"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "32e9cc72-d984-4b3a-876d-2d259eb14bcc",
											"name": "Generic Error Schema",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"credit_card_transaction_id\": \"T1c3p4yBuVYJ9\",\n  \"skip_hook_notification\": false,\n  \"transaction_reference\": \"dolore Utaut\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/void",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														"void"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": 24,\n      \"field\": \"id\",\n      \"message\": \"The requested entity was not found. transaction_id not found\"\n    },\n    {\n      \"code\": 24,\n      \"field\": \"id\",\n      \"message\": \"The requested entity was not found. transaction_id not found\"\n    }\n  ],\n  \"result\": {\n    \"success\": \"false\"\n  }\n}"
										}
									]
								},
								{
									"name": "Transaction Details",
									"id": "8024cc0a-3101-4804-ad0c-6f85e9955731",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-Key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/transactions/:REFERENCE",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"transactions",
												":REFERENCE"
											],
											"variable": [
												{
													"id": "e81f38c8-878c-47a2-8e17-39dac748d226",
													"key": "REFERENCE",
													"value": "Excepteur",
													"description": "(Required) This is the Bolt transaction reference. (ex. N7Y3-NFKC-VFRF)"
												}
											]
										},
										"description": "This allows you to pull the full transaction details for a given transaction.\n\n **Note**: All objects and fields marked `required` in the Transaction Details response are also **nullable**. This includes any sub-components (objects or fields) also marked `required`.\n"
									},
									"response": [
										{
											"id": "6d21a3f3-48bc-4df9-8b78-5ec3f91f242e",
											"name": "Transaction Details Retrieved\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/:REFERENCE",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														":REFERENCE"
													],
													"variable": [
														{
															"key": "REFERENCE",
															"value": "Excepteur",
															"description": "(Required) This is the Bolt transaction reference. (ex. N7Y3-NFKC-VFRF)"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"amount\": {\n    \"amount\": 754,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"authorization\": {\n    \"reason\": 6,\n    \"status\": 1,\n    \"auth\": \"auth\",\n    \"avs_response\": \"avs\",\n    \"cvv_response\": \"cvv\",\n    \"metadata\": {\n      \"processor_card_token\": \"8416276679724052\",\n      \"processor_shopperReference\": \"05446666484094287\",\n      \"processor_token_alias\": \"\"\n    },\n    \"processor\": \"adyen_gateway\"\n  },\n  \"captures\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"splits\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"splits\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"date\": 1615407159447,\n  \"from_consumer\": {\n    \"emails\": [\n      {\n        \"address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"priority\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"priority\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"first_name\": \"Charlotte\",\n    \"id\": \"b2vghjk2v4c5fgdh3jak\",\n    \"last_name\": \"Charles\",\n    \"phones\": [\n      {\n        \"country_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"priority\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"country_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"priority\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"from_credit_card\": {\n    \"token\": \"a1B2c3D4e5F6G7H8i9J0k1L2m3N4o5P6Q7r8S9t0\",\n    \"last4\": \"1234\",\n    \"bin\": \"cillu\",\n    \"number\": \"occaecat dolor in incididunt\",\n    \"expiration\": \"2025-11\",\n    \"postal_code\": \"10044\",\n    \"token_type\": \"bolt\",\n    \"billing_address\": {\n      \"street_address1\": \"888 main street\",\n      \"locality\": \"Brooklyn\",\n      \"region\": \"NY\",\n      \"postal_code\": \"10044\",\n      \"company\": \"Bolt\",\n      \"country\": \"United States\",\n      \"country_code\": \"US\",\n      \"default\": true,\n      \"email\": \"alan.watts@bolt.com\",\n      \"first_name\": \"Alan\",\n      \"last_name\": \"Watts\",\n      \"name\": \"Alan Watts\",\n      \"phone\": \"1-867-5309\",\n      \"region_code\": \"NY\",\n      \"street_address2\": \"apt 3021\",\n      \"street_address3\": null,\n      \"street_address4\": null\n    },\n    \"billing_address_id\": null,\n    \"cryptogram\": \"aliquip\",\n    \"eci\": \"amet sit\",\n    \"network\": \"amex\",\n    \"priority\": 2,\n    \"save\": false\n  },\n  \"id\": \"T1c3p4yBuVYJ9\",\n  \"indemnification_decision\": \"indemnified\",\n  \"indemnification_reason\": \"merchant_force_approved\",\n  \"merchant\": {\n    \"created_at\": 1485997169003,\n    \"description\": \"Brand Name Here.\",\n    \"processor\": \"adyen_gateway\",\n    \"operational_processors\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"time_zone\": \"America/Los_Angeles\",\n    \"base_model\": {\n      \"CreatedAt\": 20088715,\n      \"DeactivatedAt\": 41654341,\n      \"DeactivatedBy\": -81023699,\n      \"ID\": -40035853,\n      \"UpdatedAt\": 97979890\n    },\n    \"consumer_id\": -96332394,\n    \"mcc\": \"eiusmod id sunt aliquip\",\n    \"onboarding_status\": \"new_merchant\",\n    \"partner_id\": 29743443,\n    \"public_id\": \"zSrbabI3MFe8\",\n    \"status\": 2\n  },\n  \"merchant_division\": {\n    \"merchant_id\": \"4ab56ad7865ada4ad32\",\n    \"description\": \"Storefront for employees only.\",\n    \"is_universal_merchant_api\": true,\n    \"is_webhooks_v2\": true,\n    \"shipping_url\": \"https://mystore.com/api/v1/shipping\",\n    \"tax_url\": \"https://mystore.com/api/v1/tax\",\n    \"account_page_url\": \"https://mystore.com/account\",\n    \"create_order_url\": \"https://mystore.com/api/v1/create_order\",\n    \"debug_url\": \"https://mystore.com/v1/debug\",\n    \"get_account_url\": \"https://mystore.com/api/v1/account_get\",\n    \"hook_type\": \"pending\",\n    \"hook_url\": \"https://mystore.com/api/v1/hooks\",\n    \"id\": \"4ab56ad7865ada4ad32\",\n    \"logo\": {\n      \"domain\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"oauth_logout_url\": \"https://mystore.com/api/v1/oauth_logout\",\n    \"oauth_redirect_url\": \"https://mystore.com/api/v1/oauth_redirect\",\n    \"platform\": \"big_commerce\",\n    \"plugin_config_url\": \"https://mystore.com/api/v1/plugin_config\",\n    \"privacy_policy_url\": \"https://mystore.com/api/v1/privacy\",\n    \"product_info_url\": \"https://mystore.com/api/v1/product_details\",\n    \"public_id\": \"4ab56ad7865ada4ad32\",\n    \"shipping_and_tax_url\": \"https://mystore.com/api/v1/shipping_and_tax\",\n    \"terms_of_service_url\": \"https://mystore.com/api/v1/terms\",\n    \"universal_merchant_api_url\": \"https://mystore.com/api/bolt_universal\",\n    \"update_cart_url\": \"https://mystore.com/api/v1/cart_update\",\n    \"validate_additional_account_data_url\": \"https://mystore.com/api/v1/account_validate\"\n  },\n  \"order\": {\n    \"cart\": {\n      \"currency\": {\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency_symbol\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"subtotal_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"total_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"billing_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cart_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"discount_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"discounts\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"display_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"in_store_shipments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"items\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"merchant_order_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"order_description\": \"string\",\n      \"order_reference\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipping_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tax_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transaction_reference\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"dynamic_content\": {\n      \"custom_fields\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"gift_option_view\": {\n        \"hide_gift_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"hide_gift_wrap\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"hide_apm\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"order_notice\": \"A Notice Message\",\n      \"payment_notice\": \"A Notice Message\",\n      \"shipping_info_notice\": \"A Notice Message\",\n      \"shipping_notice\": \"A Notice Message\"\n    },\n    \"external_data\": {\n      \"shopify\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"token\": \"a2b3dDc4cA5e6fg78Bg9hj0kl\",\n    \"user_note\": \"This item is a gift.\"\n  },\n  \"processor\": \"adyen_gateway\",\n  \"reference\": \"sit consecte\",\n  \"refund_transactions\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"capture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"captures\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credit\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"date\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"from_consumer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"from_credit_card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"indemnification_decision\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"indemnification_reason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last_viewed_utc\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"merchant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"merchant_division\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"merchant_order_number\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"order_decision\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"processor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"reference\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"review_ticket\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"risk_insights\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"splits\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"to_consumer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"to_credit_card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transaction_properties\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"capture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"captures\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credit\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"date\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"from_consumer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"from_credit_card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"indemnification_decision\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"indemnification_reason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last_viewed_utc\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"merchant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"merchant_division\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"merchant_order_number\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"order_decision\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"processor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"reference\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"review_ticket\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"risk_insights\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"splits\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"to_consumer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"to_credit_card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transaction_properties\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"requested_refund_amount\": {\n    \"amount\": 39501932.70353398,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"risk_insights\": {\n    \"available\": true,\n    \"decision_factors\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"fraud_probability\": 943,\n    \"payment_instrument_factors\": {\n      \"avs\": \"avs result\",\n      \"cvv\": \"cvv result\"\n    }\n  },\n  \"source_transaction\": {\n    \"amount\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"authorization\": {\n      \"reason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"auth\": \"auth\",\n      \"avs_response\": \"avs\",\n      \"cvv_response\": \"cvv\",\n      \"metadata\": {\n        \"processor_card_token\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"processor_shopperReference\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"processor_token_alias\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"processor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"capture\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"splits\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"captures\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"credit\": {\n      \"status\": \"pending\"\n    },\n    \"date\": 1615407159447,\n    \"from_consumer\": {\n      \"id\": \"AB3rJKam5DhYE\",\n      \"emails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email_verified\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"user_membership\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"first_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phones\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"platform_account_status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"from_credit_card\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expiration\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"network\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"token_type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"display_network\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icon_asset_path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"billing_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"indemnification_decision\": \"indemnified\",\n    \"indemnification_reason\": \"merchant_force_approved\",\n    \"merchant\": {\n      \"created_at\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"processor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"operational_processors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"time_zone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"base_model\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"consumer_id\": -95375862,\n      \"mcc\": \"elit amet Lorem anim\",\n      \"onboarding_status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partner_id\": -70934650,\n      \"public_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"merchant_division\": {\n      \"merchant_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"is_universal_merchant_api\": true,\n      \"is_webhooks_v2\": true,\n      \"shipping_url\": \"https://mystore.com/api/v1/shipping\",\n      \"tax_url\": \"https://mystore.com/api/v1/tax\",\n      \"account_page_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"create_order_url\": \"https://mystore.com/api/v1/create_order\",\n      \"debug_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"get_account_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hook_type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hook_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauth_logout_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauth_redirect_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"platform\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"plugin_config_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"privacy_policy_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"product_info_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"public_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipping_and_tax_url\": \"https://mystore.com/api/v1/shipping_and_tax\",\n      \"terms_of_service_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"universal_merchant_api_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"update_cart_url\": \"https://mystore.com/api/v1/cart_update\",\n      \"validate_additional_account_data_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"merchant_order_number\": \"O-1234567\",\n    \"order_decision\": {\n      \"decision_factors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"score\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"processor\": \"adyen_gateway\",\n    \"reference\": \"sunt utad do\",\n    \"review_ticket\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"request_deadline\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"splits\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"status\": \"cancelled\",\n    \"to_consumer\": {\n      \"id\": \"AB3rJKam5DhYE\",\n      \"emails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email_verified\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"user_membership\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"first_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phones\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"platform_account_status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"to_credit_card\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expiration\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"network\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"token_type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"display_network\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icon_asset_path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"billing_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"transaction_properties\": {\n      \"avs\": \"avs result\",\n      \"cvv\": \"cvv result\"\n    },\n    \"type\": \"cc_payment\"\n  },\n  \"splits\": [\n    {\n      \"amount\": {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency_symbol\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"type\": \"processing_fee\"\n    },\n    {\n      \"amount\": {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency_symbol\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"type\": \"processing_fee\"\n    }\n  ],\n  \"status\": \"cancelled\",\n  \"timeline\": [\n    {\n      \"address_change\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"consumer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"date\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"note\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"review\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visibility\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"address_change\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"consumer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"date\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"note\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"review\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visibility\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"to_consumer\": {\n    \"emails\": [\n      {\n        \"address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"priority\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"priority\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"first_name\": \"Charlotte\",\n    \"id\": \"b2vghjk2v4c5fgdh3jak\",\n    \"last_name\": \"Charles\",\n    \"phones\": [\n      {\n        \"country_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"priority\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"country_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"priority\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"total_refund_amount\": {\n    \"amount\": 3018250.284208253,\n    \"currency\": \"USD\",\n    \"currency_symbol\": \"$\"\n  },\n  \"type\": \"cc_payment\"\n}"
										},
										{
											"id": "9f5d0cea-665a-44b5-a57b-25d85b8b13a6",
											"name": "Generic Error Schema",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/:REFERENCE",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														":REFERENCE"
													],
													"variable": [
														{
															"key": "REFERENCE",
															"value": "Excepteur",
															"description": "(Required) This is the Bolt transaction reference. (ex. N7Y3-NFKC-VFRF)"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "4e412856-6ffd-463e-83ea-158e7127e611",
											"name": "Generic Error Schema",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
														"key": "X-Nonce",
														"value": "9869319e-27a2-a137-5c37-e21c66117565"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/merchant/transactions/:REFERENCE",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"merchant",
														"transactions",
														":REFERENCE"
													],
													"variable": [
														{
															"key": "REFERENCE",
															"value": "Excepteur",
															"description": "(Required) This is the Bolt transaction reference. (ex. N7Y3-NFKC-VFRF)"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										}
									]
								}
							],
							"id": "3f93d3f2-5c44-47a5-84d3-b5c044d9a8dc"
						},
						{
							"name": "Get Merchant Identifiers",
							"id": "7cc61ba2-3fd8-410a-914e-f490f3f5acde",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "X-API-Key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/merchant/identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"merchant",
										"identifiers"
									]
								},
								"description": "This endpoint returns the merchant's public ID and the [publishable key](https://help.bolt.com/developers/guides/checkout-guides/managed-checkout/custom-cart-guides/how-to-integrate/) related to the merchant division."
							},
							"response": [
								{
									"id": "c7bb5cb4-67b5-4d3f-91cc-5c288269c054",
									"name": "Merchant Identifiers Retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/identifiers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"identifiers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"merchant_divisions\": [\n    {\n      \"division_id\": \"IraJdeIgmdsO\",\n      \"publishable_key\": \"8fd9diIy59sj.IraJdeIgmdsO.fd233434fg2c616cgo932aa6e1e4fc627a9385045gr395222a127gi93c595rg4\"\n    },\n    {\n      \"division_id\": \"IraJdeIgmdsO\",\n      \"publishable_key\": \"8fd9diIy59sj.IraJdeIgmdsO.fd233434fg2c616cgo932aa6e1e4fc627a9385045gr395222a127gi93c595rg4\"\n    }\n  ],\n  \"merchant_id\": \"8fd9diIy59sj\",\n  \"signing_secret\": \"xf833434fg2cffos92632aa6e1e4fc627a9385045gdj937fg2a127gi93cgos873\"\n}"
								},
								{
									"id": "2d4e4d6e-e747-4e37-9193-8c90ab83d3bc",
									"name": "Invalid Merchant API Key",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/identifiers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"identifiers"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								}
							]
						},
						{
							"name": "Create Order Token",
							"id": "ad092414-5ae3-45fd-85ab-1dc8d60106c2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "X-API-Key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cart\": {\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cart_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order_description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order_reference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transaction_reference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"channel\": \"browser\",\n  \"create_cart_on_merchant_backend\": false,\n  \"metadata\": {\n    \"encrypted_user_id\": \"ID12345678\"\n  },\n  \"user_note\": \"Happy Birthday to my best friend in the whole world. Enjoy!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/merchant/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"merchant",
										"orders"
									]
								},
								"description": "Make a request to this endpoint to create a Bolt order, generate a Bolt order token, and initiate the checkout process. A Bolt order token is required for Bolt orders; see Non-Bolt orders for alternative use cases."
							},
							"response": [
								{
									"id": "35d2283b-9204-42e4-b5b4-d8f38184a599",
									"name": "Token Generation Successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cart\": {\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cart_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order_description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order_reference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transaction_reference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"channel\": \"browser\",\n  \"create_cart_on_merchant_backend\": false,\n  \"metadata\": {\n    \"encrypted_user_id\": \"ID12345678\"\n  },\n  \"user_note\": \"Happy Birthday to my best friend in the whole world. Enjoy!\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"orders"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"cart\": {\n    \"billing_address\": {\n      \"company\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email_address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"first_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"last_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"locality\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone_number\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"postal_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address1\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address2\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address3\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"street_address4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cart_url\": \"https://boltswagstore.com/orders/123456765432\",\n    \"currency\": {\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"customizations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"delivery_options\": {\n      \"dynamicContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inStorePickupOptions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipToStoreOptions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shippingOptions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"discount_amount\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"discounts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"display_id\": \"displayid_100\",\n    \"items\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"merchant_order_url\": \"qui esse\",\n    \"msrp\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"order_description\": \"Order #1234567890\",\n    \"order_reference\": \"order_100\",\n    \"pickups\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"shipments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"shipping_amount\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"subtotal_amount\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tax_amount\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"total_amount\": {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency_symbol\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"transaction_reference\": \"adipisicing \"\n  },\n  \"dynamic_content\": {\n    \"custom_fields\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"gift_option_view\": {\n      \"hide_gift_message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hide_gift_wrap\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"hide_apm\": [\n      \"AMAZONPAY\",\n      \"KLARNA\"\n    ],\n    \"order_notice\": \"deserunt irure reprehenderit non commodo\",\n    \"payment_notice\": \"est voluptate cupidatat\",\n    \"shipping_info_notice\": \"ut nisi ea\",\n    \"shipping_notice\": \"dolor labore ea non\"\n  },\n  \"external_data\": {\n    \"steam_id\": \"in veniam\"\n  },\n  \"token\": \"enim in\",\n  \"user_note\": \"consectetur qui minim veniam\"\n}"
								},
								{
									"id": "9122a4f9-a894-4905-a530-dad94ffda612",
									"name": "Generic Error Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cart\": {\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cart_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order_description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order_reference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transaction_reference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"channel\": \"browser\",\n  \"create_cart_on_merchant_backend\": false,\n  \"metadata\": {\n    \"encrypted_user_id\": \"ID12345678\"\n  },\n  \"user_note\": \"Happy Birthday to my best friend in the whole world. Enjoy!\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"orders"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								},
								{
									"id": "44c06204-14e7-46a1-ac27-ec866c400fe8",
									"name": "Generic Error Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cart\": {\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cart_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order_description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order_reference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transaction_reference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"channel\": \"browser\",\n  \"create_cart_on_merchant_backend\": false,\n  \"metadata\": {\n    \"encrypted_user_id\": \"ID12345678\"\n  },\n  \"user_note\": \"Happy Birthday to my best friend in the whole world. Enjoy!\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"orders"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								},
								{
									"id": "be9f5fd9-974b-4bce-b4fa-a4c53f78bea4",
									"name": "Generic Error Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cart\": {\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cart_url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order_description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order_reference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transaction_reference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"channel\": \"browser\",\n  \"create_cart_on_merchant_backend\": false,\n  \"metadata\": {\n    \"encrypted_user_id\": \"ID12345678\"\n  },\n  \"user_note\": \"Happy Birthday to my best friend in the whole world. Enjoy!\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"orders"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								}
							]
						},
						{
							"name": "Fetch a Statement",
							"id": "928ca593-74fa-4ce3-8a81-a20a9ff97ace",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "X-API-Key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
										"key": "X-Nonce",
										"value": "9869319e-27a2-a137-5c37-e21c66117565"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"daily_transaction\",\n  \"file_type\": \"csv\",\n  \"date\": 1586480400000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/merchant/statement",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"merchant",
										"statement"
									]
								},
								"description": "Get a pre-signed URL for the requested statement file."
							},
							"response": [
								{
									"id": "0803d28f-59f0-4917-bfde-eed59f75d247",
									"name": "Statements Fetch Successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/statement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"statement"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"url\": \"https://bolt-statements-production.s3.us-west-2.amazonaws.com/00_daily_transaction_20200410.csv\"\n}"
								},
								{
									"id": "0ffd72df-b159-4ffe-9e03-0781494b24c1",
									"name": "Generic Error Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/statement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"statement"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								},
								{
									"id": "c72c61bf-a6aa-4113-9ab7-e4558002bb40",
									"name": "Generic Error Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/statement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"statement"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								},
								{
									"id": "4a72288c-21e8-4828-89ee-462f5f24e502",
									"name": "Generic Error Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/statement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"statement"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								}
							]
						},
						{
							"name": "Send order tracking details",
							"id": "27231fb7-628a-4ef6-bc05-fc035e31c80e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "X-API-Key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
										"key": "X-Nonce",
										"value": "9869319e-27a2-a137-5c37-e21c66117565"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transaction_reference\": \"culpa eu ess\",\n  \"tracking_number\": \"EZ1000000001\",\n  \"carrier\": \"UPS\",\n  \"items\": [\n    {\n      \"reference\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"total_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unit_price\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bolt_product_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"brand\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collections\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"color\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customizations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"details_url\": \"https://boltswagstore.com/inventory/hats/red-hat.png\",\n      \"image_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isbn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"item_group\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"manufacturer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"options\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"properties\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipment_type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sku\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tax_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"taxable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uom\": \"string\",\n      \"upc\": \"string\",\n      \"weight\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"reference\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"total_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unit_price\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bolt_product_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"brand\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collections\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"color\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customizations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"details_url\": \"https://boltswagstore.com/inventory/hats/red-hat.png\",\n      \"image_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isbn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"item_group\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"manufacturer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"options\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"properties\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipment_type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sku\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tax_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"taxable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uom\": \"string\",\n      \"upc\": \"string\",\n      \"weight\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"is_non_bolt_order\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/merchant/track_shipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"merchant",
										"track_shipment"
									]
								},
								"description": "Send the carrier and order tracking number to Bolt (after a label has been printed). Bolt then uses EasyPost to forward ongoing tracking event updates to the shopper. This request must include **all** items included in the shipment; their references must also match those found in the original cart generation.\n"
							},
							"response": [
								{
									"id": "cf1ce8cb-71f2-41a0-9c9d-557685c43c6f",
									"name": "Order Tracking Successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/track_shipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"track_shipment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"url\": \"Excepteur\"\n}"
								},
								{
									"id": "e5fe5714-3de7-4f28-a89c-bfc12cc1924d",
									"name": "Generic Error Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/track_shipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"track_shipment"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								},
								{
									"id": "c79dfc83-082c-40aa-b5c7-842457271b93",
									"name": "Generic Error Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
												"key": "X-Nonce",
												"value": "9869319e-27a2-a137-5c37-e21c66117565"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/merchant/track_shipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"merchant",
												"track_shipment"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								}
							]
						}
					],
					"id": "8f3b23d4-06d1-4f3a-8182-fba71a97cd68"
				},
				{
					"name": "webhooks",
					"item": [
						{
							"name": "{webhook id}",
							"item": [
								{
									"name": "Delete a Bolt Webhook",
									"id": "bde03045-9255-4c2a-bb35-0a5faed1b249",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-Key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/webhooks/:webhook_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"webhooks",
												":webhook_id"
											],
											"variable": [
												{
													"id": "5ced5a6c-b123-4a8e-b164-b99bc869c735",
													"key": "webhook_id",
													"value": "wh_za7VbYcSQU2zRgGQXQAm-g",
													"description": "(Required) Webhook ID"
												}
											]
										},
										"description": "Delete a Bolt webhook. Provide an authorized X-API-Key to perform this action."
									},
									"response": [
										{
											"id": "ed361c0e-5155-4afa-8765-bac646520d1a",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/webhooks/:webhook_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"webhooks",
														":webhook_id"
													],
													"variable": [
														{
															"key": "webhook_id",
															"value": "wh_za7VbYcSQU2zRgGQXQAm-g",
															"description": "(Required) Webhook ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "27dd016d-c3bb-43fc-87f2-8f76b06ddecc",
											"name": "BAD REQUEST. Request is malformed or invalid values are detected.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/webhooks/:webhook_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"webhooks",
														":webhook_id"
													],
													"variable": [
														{
															"key": "webhook_id",
															"value": "wh_za7VbYcSQU2zRgGQXQAm-g",
															"description": "(Required) Webhook ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "22d5c6b4-6dd3-41fa-80a7-22c13f6436ba",
											"name": "FORBIDDEN. Not authorized to perform the operation on this resource.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/webhooks/:webhook_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"webhooks",
														":webhook_id"
													],
													"variable": [
														{
															"key": "webhook_id",
															"value": "wh_za7VbYcSQU2zRgGQXQAm-g",
															"description": "(Required) Webhook ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "8159979a-4091-412d-abbd-8a8e64806909",
											"name": "NOT FOUND. Unable to find webhook.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/webhooks/:webhook_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"webhooks",
														":webhook_id"
													],
													"variable": [
														{
															"key": "webhook_id",
															"value": "wh_za7VbYcSQU2zRgGQXQAm-g",
															"description": "(Required) Webhook ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										}
									]
								},
								{
									"name": "Get Webhook",
									"id": "0a578ee5-9e89-414b-8c02-9a8f2f6dede1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-Key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/webhooks/:webhook_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"webhooks",
												":webhook_id"
											],
											"variable": [
												{
													"id": "5908f772-1c39-46e6-a8bf-ba8dad1636fb",
													"key": "webhook_id",
													"value": "wh_za7VbYcSQU2zRgGQXQAm-g",
													"description": "(Required) Webhook ID"
												}
											]
										},
										"description": "Get Webhook information by its Webhook ID. Results only include webhooks authorized by the X-API-Key."
									},
									"response": [
										{
											"id": "2194ede6-944a-4b92-af15-39375a2841b0",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/webhooks/:webhook_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"webhooks",
														":webhook_id"
													],
													"variable": [
														{
															"key": "webhook_id",
															"value": "wh_za7VbYcSQU2zRgGQXQAm-g",
															"description": "(Required) Webhook ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"webhook_id\": \"wh_za7VbYcSQU2zRgGQXQAm-g\",\n  \"created_at\": 1485997169003,\n  \"url\": \"https://eva-nerv.shop.com/path/to/hook\",\n  \"event_group\": \"null\",\n  \"events\": [\n    \"pending\",\n    \"pending\"\n  ]\n}"
										},
										{
											"id": "38ef2712-8712-488b-983d-d784b32c023b",
											"name": "BAD REQUEST. Request is malformed or invalid values are detected.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/webhooks/:webhook_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"webhooks",
														":webhook_id"
													],
													"variable": [
														{
															"key": "webhook_id",
															"value": "wh_za7VbYcSQU2zRgGQXQAm-g",
															"description": "(Required) Webhook ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "df83881b-0b62-42ad-899e-a78f2c00863b",
											"name": "FORBIDDEN. Not authorized to perform the operation on this resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/webhooks/:webhook_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"webhooks",
														":webhook_id"
													],
													"variable": [
														{
															"key": "webhook_id",
															"value": "wh_za7VbYcSQU2zRgGQXQAm-g",
															"description": "(Required) Webhook ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										},
										{
											"id": "b852d152-3fae-43cf-b8b2-c52fb06752a4",
											"name": "NOT FOUND. Unable to find webhook.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/webhooks/:webhook_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"webhooks",
														":webhook_id"
													],
													"variable": [
														{
															"key": "webhook_id",
															"value": "wh_za7VbYcSQU2zRgGQXQAm-g",
															"description": "(Required) Webhook ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
										}
									]
								}
							],
							"id": "6661594f-a4cf-456a-8680-62d2e2caaa3f"
						},
						{
							"name": "Query Webhooks",
							"id": "c0b36488-49f0-4628-9d45-13d742df0a7a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "X-API-Key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/webhooks?division_id=Excepteur",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"webhooks"
									],
									"query": [
										{
											"key": "division_id",
											"value": "Excepteur",
											"description": "(Required) The unique ID associated to the merchant's Bolt Account division; Merchants can have different divisions to suit multiple use cases (storefronts, pay-by-link, phone order processing). You can view and switch between these divisions from the Bolt Merchant Dashboard."
										}
									]
								},
								"description": "Find webhook configurations belonging to a merchant division. Results are limited to only show webhooks authorized by the X-API-Key."
							},
							"response": [
								{
									"id": "eab826ee-80fd-4e09-8a0b-45d946a38693",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/webhooks?division_id=Excepteur",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"webhooks"
											],
											"query": [
												{
													"key": "division_id",
													"value": "Excepteur"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"webhooks\": [\n    {\n      \"webhook_id\": \"wh_za7VbYcSQU2zRgGQXQAm-g\",\n      \"created_at\": 1485997169003,\n      \"url\": \"https://eva-nerv.shop.com/path/to/hook\",\n      \"event_group\": \"null\",\n      \"events\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"webhook_id\": \"wh_za7VbYcSQU2zRgGQXQAm-g\",\n      \"created_at\": 1485997169003,\n      \"url\": \"https://eva-nerv.shop.com/path/to/hook\",\n      \"event_group\": \"null\",\n      \"events\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "9e089729-3bac-46f2-9522-1923c305a161",
									"name": "BAD REQUEST. Request is malformed or invalid values are detected.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/webhooks?division_id=Excepteur",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"webhooks"
											],
											"query": [
												{
													"key": "division_id",
													"value": "Excepteur"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								},
								{
									"id": "61d566b4-d54b-4625-9e39-d18aa07d23c3",
									"name": "FORBIDDEN. Not authorized to query webhook for this entity.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/webhooks?division_id=Excepteur",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"webhooks"
											],
											"query": [
												{
													"key": "division_id",
													"value": "Excepteur"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								},
								{
									"id": "5c08fb80-3cbe-41b7-bee3-142625268f90",
									"name": "NOT FOUND. Unable to find webhook.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/webhooks?division_id=Excepteur",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"webhooks"
											],
											"query": [
												{
													"key": "division_id",
													"value": "Excepteur"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								}
							]
						},
						{
							"name": "Create Bolt Webhook",
							"id": "9f2af3f1-5be2-4fe5-ac7a-81ea5fa8f81d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "X-API-Key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"division_id\": \"4ab56ad7865ada4ad32\",\n  \"url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"webhooks"
									]
								},
								"description": "Create a new webhook to receive notifications from Bolt about various events, such as transaction status. Webhooks must have unique configuration."
							},
							"response": [
								{
									"id": "b0ed641d-f30e-452e-953b-0ed66136335a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"division_id\": \"4ab56ad7865ada4ad32\",\n  \"url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"webhooks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"webhook_id\": \"wh_za7VbYcSQU2zRgGQXQAm-g\"\n}"
								},
								{
									"id": "f69d902a-d0d7-4916-93e8-4df3484d89ed",
									"name": "BAD REQUEST. Request is malformed or invalid values are detected.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"division_id\": \"4ab56ad7865ada4ad32\",\n  \"url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"webhooks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								},
								{
									"id": "27fbf41a-1ce2-4eb2-b1c7-c986473c7d4c",
									"name": "FORBIDDEN. Not authorized to create a webhook for this entity.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"division_id\": \"4ab56ad7865ada4ad32\",\n  \"url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"webhooks"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								},
								{
									"id": "fc1c22b2-6f83-4362-98a7-d56302146c14",
									"name": "UNPROCESSABLE ENTITY. Not allowed to receive duplicate notifications. This is to safeguard a webhook listener from receiving duplicate events. Use GET /v1/webhooks and DELETE /v1/webhooks to check for and delete duplicate webhooks.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-API-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"division_id\": \"4ab56ad7865ada4ad32\",\n  \"url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"webhooks"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"message\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": {\n    \"success\": false\n  }\n}"
								}
							]
						}
					],
					"id": "4abc31ba-ec39-46cb-8be4-598a0a59b7f0"
				},
				{
					"name": "OAuth Token Endpoint",
					"id": "6a104911-d0cc-4702-b486-b1d40e5db270",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "X-API-Key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
								"key": "X-Publishable-Key",
								"value": "Excepteur"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "PUBLISHABLE_KEY_PLACEHOLDER"
								},
								{
									"key": "client_secret",
									"value": "API_KEY_PLACEHOLDER"
								},
								{
									"key": "code",
									"value": "AUTH_CODE_PLACEHOLDER"
								},
								{
									"key": "grant_type",
									"value": "authorization_code"
								},
								{
									"key": "scope",
									"value": "bolt.account.manage+openid"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						},
						"description": "Endpoint for receiving access, ID, and refresh tokens from Bolt's OAuth server. \n\nTo use this endpoint, first use the Authorization Code Request flow by using the `authorization_code` Grant Type (`grant_type`). Then, in the event that you would need a second or subsequent code, use the `refresh_token` value returned from a successful request as the `refresh_token` input value in your subsequent `refresh_token` Grant Type (`grant_type`) request.\n"
					},
					"response": [
						{
							"id": "7428fc9f-1543-4928-b8fa-5d85d0c48de3",
							"name": "OAuth token response.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-API-Key",
										"value": "<API Key>"
									},
									{
										"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
										"key": "X-Publishable-Key",
										"value": "Excepteur"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "PUBLISHABLE_KEY_PLACEHOLDER"
										},
										{
											"key": "client_secret",
											"value": "API_KEY_PLACEHOLDER"
										},
										{
											"key": "code",
											"value": "AUTH_CODE_PLACEHOLDER"
										},
										{
											"key": "grant_type",
											"value": "authorization_code"
										},
										{
											"key": "scope",
											"value": "bolt.account.manage+openid"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"access_token\": \"$ACCESS_TOKEN\",\n  \"expires_in\": 3600,\n  \"id_token\": \"$ID_TOKEN\",\n  \"refresh_token\": \"$REFRESH_TOKEN\",\n  \"refresh_token_scope\": \"bolt.account.view\",\n  \"scope\": \"bolt.account.manage openid\",\n  \"token_type\": \"bearer\"\n}"
						},
						{
							"id": "f834ef2c-0bdb-4887-9028-f6246ab0429b",
							"name": "Invalid request to OAuth Token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-API-Key",
										"value": "<API Key>"
									},
									{
										"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
										"key": "X-Publishable-Key",
										"value": "Excepteur"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "PUBLISHABLE_KEY_PLACEHOLDER"
										},
										{
											"key": "client_secret",
											"value": "API_KEY_PLACEHOLDER"
										},
										{
											"key": "code",
											"value": "AUTH_CODE_PLACEHOLDER"
										},
										{
											"key": "grant_type",
											"value": "authorization_code"
										},
										{
											"key": "scope",
											"value": "bolt.account.manage+openid"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"token"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"error\": \"invalid_request\",\n  \"error_description\": \"The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed.\"\n}"
						},
						{
							"id": "38f05dd8-6da6-4fdd-aead-eceefc285098",
							"name": "Forbidden request to OAuth Token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-API-Key",
										"value": "<API Key>"
									},
									{
										"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
										"key": "X-Publishable-Key",
										"value": "Excepteur"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "PUBLISHABLE_KEY_PLACEHOLDER"
										},
										{
											"key": "client_secret",
											"value": "API_KEY_PLACEHOLDER"
										},
										{
											"key": "code",
											"value": "AUTH_CODE_PLACEHOLDER"
										},
										{
											"key": "grant_type",
											"value": "authorization_code"
										},
										{
											"key": "scope",
											"value": "bolt.account.manage+openid"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"token"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"error\": \"request_forbidden\",\n  \"error_description\": \"The request is forbidden. You are not allowed to perform this action.\"\n}"
						},
						{
							"id": "159d1c36-3772-4715-96c9-1c126a63635f",
							"name": "Unprocessable request to OAuth Token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-API-Key",
										"value": "<API Key>"
									},
									{
										"description": "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
										"key": "X-Publishable-Key",
										"value": "Excepteur"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "PUBLISHABLE_KEY_PLACEHOLDER"
										},
										{
											"key": "client_secret",
											"value": "API_KEY_PLACEHOLDER"
										},
										{
											"key": "code",
											"value": "AUTH_CODE_PLACEHOLDER"
										},
										{
											"key": "grant_type",
											"value": "authorization_code"
										},
										{
											"key": "scope",
											"value": "bolt.account.manage+openid"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"token"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"error\": \"invalid _grant\",\n  \"error_description\": \"The provided authorization grant (e.g., authorization code, resource owner credentials) or refresh token is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client.\"\n}"
						}
					]
				},
				{
					"name": "Get Products Catalog",
					"id": "d135ba5c-670f-4d9c-8398-ceab7f79704b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "X-API-Key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
								"key": "X-Nonce",
								"value": "9869319e-27a2-a137-5c37-e21c66117565"
							},
							{
								"description": "(Required) Unique identifier for the publisher.",
								"key": "X-Publisher-Key",
								"value": "Excepteur"
							},
							{
								"description": "(Required) Generated signature after using the signing secret and nonce by the publisher.",
								"key": "X-Authorization-Signature",
								"value": "Excepteur"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/products/catalog?MerchantDivisionPublicID=Excepteur&limit=Excepteur",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"products",
								"catalog"
							],
							"query": [
								{
									"key": "MerchantDivisionPublicID",
									"value": "Excepteur",
									"description": "(Required) The public ID for a given merchant division of your Bolt account."
								},
								{
									"key": "limit",
									"value": "Excepteur",
									"description": "The maximum number of product results returned."
								}
							]
						},
						"description": "This endpoint returns a list of products when given a valid `merchant_division_id`."
					},
					"response": [
						{
							"id": "e365cfe4-bc42-4a2d-bcdd-4cfac73aae5e",
							"name": "Product Catalogue Retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-API-Key",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
										"key": "X-Nonce",
										"value": "9869319e-27a2-a137-5c37-e21c66117565"
									},
									{
										"description": "(Required) Unique identifier for the publisher.",
										"key": "X-Publisher-Key",
										"value": "Excepteur"
									},
									{
										"description": "(Required) Generated signature after using the signing secret and nonce by the publisher.",
										"key": "X-Authorization-Signature",
										"value": "Excepteur"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/products/catalog?MerchantDivisionPublicID=Excepteur&limit=Excepteur",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"products",
										"catalog"
									],
									"query": [
										{
											"key": "MerchantDivisionPublicID",
											"value": "Excepteur"
										},
										{
											"key": "limit",
											"value": "Excepteur"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"Catalog\": [\n    {\n      \"Current\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"NextCursor\": \"incididunt\",\n      \"Parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"Properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"Variants\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"Current\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"NextCursor\": \"nisi in\",\n      \"Parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"Properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"Variants\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"Cursor\": \"tempor ut\"\n}"
						}
					]
				},
				{
					"name": "Create order token (remote)",
					"id": "32602b16-fc5c-42f5-b67c-2a02c2f23b16",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "X-API-Key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
								"key": "X-Nonce",
								"value": "9869319e-27a2-a137-5c37-e21c66117565"
							},
							{
								"description": "(Required) Unique identifier for the publisher.",
								"key": "X-Publisher-Key",
								"value": "Excepteur"
							},
							{
								"description": "(Required) Generated signature after using the signing secret and nonce by the publisher.",
								"key": "X-Authorization-Signature",
								"value": "Excepteur"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant_division_id\": \"4ab56ad7865ada4ad32\",\n  \"cart\": {\n    \"items\": [\n      {\n        \"bolt_product_id\": \"esse\",\n        \"quantity\": -53707039.35808487,\n        \"properties\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"bolt_product_id\": \"veniam consequat sint nisi\",\n        \"quantity\": -66023742.812224515,\n        \"properties\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/remote_checkout/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"remote_checkout",
								"order"
							]
						},
						"description": "This is used for publisher implementation use cases. After the publisher has called Bolt to check product inventory for availability, an order can created through the `/remote_checkout/order` endpoint.\n"
					},
					"response": [
						{
							"id": "e67bc104-e0f6-4346-ae39-167737a76638",
							"name": "Order Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-API-Key",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
										"key": "X-Nonce",
										"value": "9869319e-27a2-a137-5c37-e21c66117565"
									},
									{
										"description": "(Required) Unique identifier for the publisher.",
										"key": "X-Publisher-Key",
										"value": "Excepteur"
									},
									{
										"description": "(Required) Generated signature after using the signing secret and nonce by the publisher.",
										"key": "X-Authorization-Signature",
										"value": "Excepteur"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"merchant_division_id\": \"4ab56ad7865ada4ad32\",\n  \"cart\": {\n    \"items\": [\n      {\n        \"bolt_product_id\": \"aliqua sed voluptate\",\n        \"quantity\": -52658056.86425833,\n        \"properties\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"bolt_product_id\": \"aute laboris id tempor\",\n        \"quantity\": 75698739.01336187,\n        \"properties\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/remote_checkout/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"remote_checkout",
										"order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"token\": \"culpa eu Excepteur dolor\"\n}"
						},
						{
							"id": "6d48d0a8-2e20-4417-8ab1-620d46f7f0b0",
							"name": "Order Creation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-API-Key",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Unique 12-16 digit for every request. Is used for deduplication\nrequests so that if there a network duplication of any API we make sure we don't\ncapture payment twice or create order twice etc.\n",
										"key": "X-Nonce",
										"value": "9869319e-27a2-a137-5c37-e21c66117565"
									},
									{
										"description": "(Required) Unique identifier for the publisher.",
										"key": "X-Publisher-Key",
										"value": "Excepteur"
									},
									{
										"description": "(Required) Generated signature after using the signing secret and nonce by the publisher.",
										"key": "X-Authorization-Signature",
										"value": "Excepteur"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"merchant_division_id\": \"4ab56ad7865ada4ad32\",\n  \"cart\": {\n    \"items\": [\n      {\n        \"bolt_product_id\": \"aliqua sed voluptate\",\n        \"quantity\": -52658056.86425833,\n        \"properties\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"bolt_product_id\": \"aute laboris id tempor\",\n        \"quantity\": 75698739.01336187,\n        \"properties\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/remote_checkout/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"remote_checkout",
										"order"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"error\": {\n    \"code\": 2001005,\n    \"message\": \"This is an error message.\"\n  },\n  \"event\": \"orders\",\n  \"status\": \"failure\"\n}"
						}
					]
				},
				{
					"name": "Test Shipping",
					"id": "7108ec00-32be-4e52-85a8-2e77a044577d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "X-API-Key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tracking_number\": \"MockBolt143292\",\n  \"status\": \"delivered\",\n  \"delivery_estimate\": \"id consequat velit\",\n  \"tracking_detail\": [\n    {\n      \"city\": \"New York\",\n      \"state\": \"New York\",\n      \"zip\": \"qui id\",\n      \"country\": \"USA\",\n      \"datetime\": \"1971-06-15T08:27:13.141Z\",\n      \"status\": \"in_transit\",\n      \"message\": \"BILLING INFORMATION RECEIVED\"\n    },\n    {\n      \"city\": \"New York\",\n      \"state\": \"New York\",\n      \"zip\": \"laborum dolore\",\n      \"country\": \"USA\",\n      \"datetime\": \"1971-03-29T20:29:22.286Z\",\n      \"status\": \"in_transit\",\n      \"message\": \"BILLING INFORMATION RECEIVED\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/shipments/mock_bolt_shipping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"shipments",
								"mock_bolt_shipping"
							]
						},
						"description": "This endpoint simulates tracking an order's shipment and is for testing purposes only."
					},
					"response": [
						{
							"id": "d52ed7a2-f6a6-46fe-9c04-21c2e06ee288",
							"name": "Success - No Details",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-API-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tracking_number\": \"MockBolt143292\",\n  \"status\": \"in_transit\",\n  \"delivery_estimate\": \"ut magna ad\",\n  \"tracking_detail\": [\n    {\n      \"city\": \"New York\",\n      \"state\": \"New York\",\n      \"zip\": \"sed in ullamco incididunt\",\n      \"country\": \"USA\",\n      \"datetime\": \"1972-01-17T11:26:12.690Z\",\n      \"status\": \"in_transit\",\n      \"message\": \"BILLING INFORMATION RECEIVED\"\n    },\n    {\n      \"city\": \"New York\",\n      \"state\": \"New York\",\n      \"zip\": \"deserunt\",\n      \"country\": \"USA\",\n      \"datetime\": \"1944-03-12T12:00:11.036Z\",\n      \"status\": \"in_transit\",\n      \"message\": \"BILLING INFORMATION RECEIVED\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/shipments/mock_bolt_shipping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"shipments",
										"mock_bolt_shipping"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "7390175e-650f-48bb-ad8e-16affaeb2a18",
							"name": "OrderTrackingTesting Generic Failure",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-API-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tracking_number\": \"MockBolt143292\",\n  \"status\": \"in_transit\",\n  \"delivery_estimate\": \"ut magna ad\",\n  \"tracking_detail\": [\n    {\n      \"city\": \"New York\",\n      \"state\": \"New York\",\n      \"zip\": \"sed in ullamco incididunt\",\n      \"country\": \"USA\",\n      \"datetime\": \"1972-01-17T11:26:12.690Z\",\n      \"status\": \"in_transit\",\n      \"message\": \"BILLING INFORMATION RECEIVED\"\n    },\n    {\n      \"city\": \"New York\",\n      \"state\": \"New York\",\n      \"zip\": \"deserunt\",\n      \"country\": \"USA\",\n      \"datetime\": \"1944-03-12T12:00:11.036Z\",\n      \"status\": \"in_transit\",\n      \"message\": \"BILLING INFORMATION RECEIVED\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/shipments/mock_bolt_shipping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"shipments",
										"mock_bolt_shipping"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"status\": \"failure\"\n}"
						},
						{
							"id": "482af68a-a9a4-49af-b308-de0a1c8e3b1b",
							"name": "OrderTrackingTesting With Error Messages",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-API-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tracking_number\": \"MockBolt143292\",\n  \"status\": \"in_transit\",\n  \"delivery_estimate\": \"ut magna ad\",\n  \"tracking_detail\": [\n    {\n      \"city\": \"New York\",\n      \"state\": \"New York\",\n      \"zip\": \"sed in ullamco incididunt\",\n      \"country\": \"USA\",\n      \"datetime\": \"1972-01-17T11:26:12.690Z\",\n      \"status\": \"in_transit\",\n      \"message\": \"BILLING INFORMATION RECEIVED\"\n    },\n    {\n      \"city\": \"New York\",\n      \"state\": \"New York\",\n      \"zip\": \"deserunt\",\n      \"country\": \"USA\",\n      \"datetime\": \"1944-03-12T12:00:11.036Z\",\n      \"status\": \"in_transit\",\n      \"message\": \"BILLING INFORMATION RECEIVED\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/shipments/mock_bolt_shipping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"shipments",
										"mock_bolt_shipping"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"code\": -76208104.83843923,\n      \"message\": \"nostrud officia nulla\"\n    },\n    {\n      \"code\": 95436379.24173486,\n      \"message\": \"occaecat Lorem voluptate ipsum\"\n    }\n  ],\n  \"result\": {\n    \"success\": \"false\"\n  }\n}"
						}
					]
				}
			],
			"id": "245cb1f7-d085-470f-abab-2b1c27d78ac1"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "<API Key>",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b6a2170c-767b-41b9-b215-9118fecd56f9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c39a79b4-e520-4388-916a-5ccb620f6ca3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "8461e66c-d29b-4536-b00a-9b49fff75e1d",
			"key": "baseUrl",
			"value": "https://api.bolt.com",
			"type": "string"
		},
		{
			"id": "73215e28-9d73-46b2-8ebf-f859df8320d0",
			"key": "api_key_example",
			"value": "your_api_key",
			"type": "string"
		}
	]
}